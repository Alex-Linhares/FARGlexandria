{TODO 5 -oAL -cFARG : DELETE TChunk.ChunkRelation(R)}
{TODO 1 -oAL -cNUMBO :NUMBO Slipnet integration: (TSimilarity for Numeric Values?)}
{TODO 4 -oAL -cFARG :Refactor TRelation.CommitToSTM to withdraw chunk behavior from it
Needs to change Client afterwards}
{DONE 1 -oAL -cFARG :
Chunks with SET structure (no ordering)... how to refactor?
(i) Which methods change???  How do they change?  Can we abstract?
(ii) create subclass?
(ii)}
{DONE 2 -oAL -cFARG :
Encapsulate TProperty.GetValue: TObject;
(Encapsulate the type downcast)}
{DONE 3 -oAL -cFARG : REMOVE TCONNOTATION.VALUE; and god bless us all}
{DONE 3 -oAL -cFARG :
TConnotation.Contains checa Classtype
TChunk.Contains checa a conotaçao!!!!}
{DONE 2 -oAL -cFARG : Top-Down scout implementation inside chunks}

{DONE 2 -oAL -cFARG : Removing something from a chunk
(does this make sense?  throw it all back to STM?)
CHECK Whether deeply nested chunks will cause problems 
(i.e., propagate action up)}
{DONE 1 -oAL -cFARG : Destroying a chunk}
{DONE 1 -oAL -cFARG : How to print out chunks?}
{TODO 3    -oAL -cFARG : refactoring of TProposal object: Scout, Test, Commit (State Pattern)}
{DONE 1 -oAL -cFARG : refactoring no TMultiplication.GetBottomUpConnotationTypes}
{TODO 2 -oAL -cNUMBO : Criar nós da slipnet com chunks (including complex chunks)}
{DONE -oAL -cNUMBO : Criar a operação de multiplicar (debaixo da TRelation)}
{DONE -oAL -cFARG : throw bricks and target into STM}
{DONE -oAL -cNUMBO :
Perception of all bricks & display only of real bricks 
AND 5 bricks goddammit!!}
{DONE -oAL -cNUMBO : Display of bricks and target}
{DONE -oAL -cNUMBO : Bottom-up perception of bricks and target}
{DONE -oAL -cNUMBO : Implement external Memory}
