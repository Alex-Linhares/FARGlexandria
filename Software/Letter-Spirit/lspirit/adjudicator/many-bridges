Chez Scheme Transcript [Sat Mar 20 04:45:44 1999]
>>  (test-adj)
Training SS
Temperature 34
Temperature 1
Temperature 7
Temperature 18
Temperature 6
Testing 
Starting  ss a
Temperature 10
Temperature 10
Temperature 10
Score:  10.209758813501443
Starting  sh a
Temperature 16
Temperature 11
Temperature 14
Score:  13.628286201555
Starting  bt a
Temperature 62
Temperature 67
Temperature 72
Score:  67.18984520415079
Starting  h4 a
Temperature 70
Temperature 76
Temperature 67
Score:  70.90088428140295
Starting  bl a
Temperature 61
Temperature 64
Temperature 67
Score:  64.3615413634664
Starting  br a
Temperature 54
Temperature 60
Temperature 65
Score:  59.807784546161706
Starting  ss d
Temperature 9
Temperature 7
Temperature 6
Score:  7.32425119382152
Starting  sh d
Temperature 14
Temperature 13
Temperature 13
Score:  13.62146691571004
Starting  bt d
Temperature 58
Temperature 54
Temperature 49
Score:  53.99495168165035
Starting  h4 d
Temperature 82
Temperature 79
Temperature 84
Score:  81.57068610141619
Starting  bl d
Temperature 53
Temperature 44
Temperature 36
Score:  44.64582396231261
Starting  br d
Temperature 63
Temperature 63
Temperature 58
Score:  61.257011814963526
Starting  ss y
Temperature 11
Temperature 17
Temperature 11
Score:  12.928929208323217
Starting  sh y
Temperature 28
Temperature 26
Temperature 23
Score:  25.803396905377696
Starting  bt y
Temperature 86
Temperature 83
Temperature 79
Score:  82.55264937104982
Starting  h4 y
Temperature 73
Temperature 68
Temperature 72
Score:  71.12644893799724
Starting  bl y
Temperature 64
Temperature 59
Temperature 69
Score:  63.84102349379025
Starting  br y
Temperature 71
Temperature 59
Temperature 58
Score:  62.668061464025236
Training SH
Temperature 32
Temperature 30
Temperature 4
Temperature 2
Temperature 7
Testing 
Starting  ss a
Temperature 12
Temperature 12
Temperature 11
Score:  11.644621257519326
Starting  sh a
Temperature 24
Temperature 40
Temperature 30
Score:  31.440927630244506
Starting  bt a
Temperature 72
Temperature 67
Temperature 74
Score:  70.89184362229058
Starting  h4 a
Temperature 75
Temperature 80
Temperature 72
Score:  75.62399344834604
Starting  bl a
Temperature 36
Temperature 47
Temperature 49
Score:  44.17449132782713
Starting  br a
Temperature 77
Temperature 76
Temperature 70
Score:  74.37381701071193
Starting  ss d
Temperature 14
Temperature 10
Temperature 17
Score:  13.664387489311176
Starting  sh d
Temperature 13
Temperature 10
Temperature 11
Score:  11.616079081811028
Starting  bt d
Temperature 44
Temperature 57
Temperature 51
Score:  50.80171667474167
Starting  h4 d
Temperature 89
Temperature 88
Temperature 87
Score:  87.6745615050794
Starting  bl d
Temperature 19
Temperature 17
Temperature 17
Score:  17.836274548698885
Starting  br d
Temperature 67
Temperature 73
Temperature 64
Score:  67.93336176248356
Starting  ss y
Temperature 22
Temperature 13
Temperature 17
Score:  17.287209877490078
Starting  sh y
Temperature 33
Temperature 26
Temperature 18
Score:  25.549413385378852
Starting  bt y
Temperature 76
Temperature 82
Temperature 76
Score:  77.80715705617858
Starting  h4 y
Temperature 68
Temperature 71
Temperature 72
Score:  70.44025959242357
Starting  bl y
Temperature 31
Temperature 30
Temperature 37
Score:  32.834225256188
Starting  br y
Temperature 79
Temperature 68
Temperature 71
Score:  72.7520068223444
Training BT
Temperature 28
Temperature 19
Temperature 9
Examiner had no answer for that
Temperature 7
Testing 
Starting  ss a
Temperature 65
Temperature 64
Temperature 65
Score:  64.63244405961481
Starting  sh a
Temperature 85
Temperature 82
Temperature 70
Score:  79.18603761210245
Starting  bt a
Temperature 21
Temperature 27
Temperature 34
Score:  27.306057454537427
Starting  h4 a
Temperature 44
Temperature 39
Temperature 40
Score:  40.89522297284964
Starting  bl a
Temperature 43
Temperature 42
Temperature 51
Score:  45.41543267197428
Starting  br a
Temperature 66
Temperature 57
Temperature 71
Score:  64.5081589857701
Starting  ss d
Temperature 58
Temperature 56
Temperature 45
Score:  52.940423747785076
Starting  sh d
Temperature 55
Temperature 54
Temperature 43
Score:  50.81820428990835
Starting  bt d
Temperature 22
Temperature 9
Temperature 17
Score:  16.076845799969757
Starting  h4 d
Temperature 58
Temperature 40
Temperature 35
Score:  44.463179133024006
Starting  bl d
Temperature 44
Temperature 47
Temperature 40
Score:  43.417818337043116
Starting  br d
Temperature 41
Temperature 27
Temperature 32
Score:  33.236159246715495
Starting  ss y
Temperature 71
Temperature 60
Temperature 60
Score:  63.73426189962737
Starting  sh y
Temperature 70
Temperature 66
Temperature 76
Score:  70.34528757161657
Starting  bt y
Temperature 29
Temperature 14
Temperature 8
Score:  16.756467156117356
Starting  h4 y
Temperature 10
Temperature 14
Temperature 14
Score:  12.704338731394218
Starting  bl y
Temperature 31
Temperature 30
Temperature 35
Score:  31.903108119827092
Starting  br y
Temperature 54
Temperature 58
Temperature 33
Score:  48.485875237102526
Training H4
Temperature 35
Temperature 44
Temperature 11
Temperature 83
Temperature 42
Testing 
Starting  ss a
Temperature 75
Temperature 70
Temperature 78
Score:  74.26732137384622
Starting  sh a
Temperature 73
Temperature 73
Temperature 73
Score:  72.97816085640086
Starting  bt a
Temperature 52
Temperature 49
Temperature 52
Score:  51.28820090385084
Starting  h4 a
Temperature 51
Temperature 49
Temperature 51
Score:  49.95453861620697
Starting  bl a
Temperature 62
Temperature 60
Temperature 63
Score:  61.908621526832015
Starting  br a
Temperature 55
Temperature 56
Temperature 55
Score:  55.20808921021311
Starting  ss d
Temperature 70
Temperature 69
Temperature 75
Score:  71.44363873194862
Starting  sh d
Temperature 75
Temperature 74
Temperature 65
Score:  71.3347615717595
Starting  bt d
Temperature 60
Temperature 61
Temperature 60
Score:  60.38598351765568
Starting  h4 d
Temperature 34
Temperature 42
Temperature 34
Score:  36.32087571636645
Starting  bl d
Temperature 61
Temperature 62
Temperature 61
Score:  61.27627991207234
Starting  br d
Temperature 60
Temperature 59
Temperature 60
Score:  59.43114165239057
Starting  ss y
Temperature 67
Temperature 74
Temperature 75
Score:  71.8585313073768
Starting  sh y
Temperature 82
Temperature 75
Temperature 71
Score:  76.06505429408264
Starting  bt y
Temperature 58
Temperature 55
Temperature 56
Score:  56.31197670971659
Starting  h4 y
Temperature 50
Temperature 49
Temperature 50
Score:  49.426606702343896
Starting  bl y
Temperature 63
Temperature 60
Temperature 63
Score:  62.24836475738158
Starting  br y
Temperature 52
Temperature 53
Temperature 52
Score:  52.232032356738195
Training BL
Temperature 28
Temperature 13
Temperature 7
Temperature 8
Temperature 19
Testing 
Starting  ss a
Temperature 39
Temperature 45
Temperature 48
Score:  44.091304701701695
Starting  sh a
Temperature 56
Temperature 59
Temperature 60
Score:  58.58340250465682
Starting  bt a
Temperature 44
Temperature 43
Temperature 42
Score:  43.22412624604462
Starting  h4 a
Temperature 37
Temperature 37
Temperature 44
Score:  39.434625834031834
Starting  bl a
Temperature 33
Temperature 28
Temperature 20
Score:  27.103361014270515
Starting  br a
Temperature 63
Temperature 68
Temperature 56
Score:  62.41224700089462
Starting  ss d
Temperature 44
Temperature 45
Temperature 42
Score:  43.37345602333235
Starting  sh d
Temperature 54
Temperature 45
Temperature 46
Score:  48.40310074173204
Starting  bt d
Temperature 37
Temperature 46
Temperature 44
Score:  42.24377311943092
Starting  h4 d
Temperature 57
Temperature 56
Temperature 61
Score:  57.97123368509949
Starting  bl d
Temperature 23
Temperature 23
Temperature 20
Score:  21.87083836911653
Starting  br d
Temperature 56
Temperature 64
Temperature 67
Score:  62.4845189688277
Starting  ss y
Temperature 53
Temperature 57
Temperature 55
Score:  55.052442900049165
Starting  sh y
Temperature 55
Temperature 59
Temperature 59
Score:  57.57723498330912
Starting  bt y
Temperature 55
Temperature 62
Temperature 55
Score:  57.38320053007491
Starting  h4 y
Temperature 55
Temperature 50
Temperature 52
Score:  52.475289539517966
Starting  bl y
Temperature 24
Temperature 36
Temperature 27
Score:  28.998604803321754
Starting  br y
Temperature 59
Temperature 55
Temperature 59
Score:  57.494113213817315
Training BR
Temperature 31
Temperature 3
Temperature 5
Temperature 17
Temperature 17
Testing 
Starting  ss a
Temperature 52
Temperature 53
Temperature 49
Score:  51.47119069251092
Starting  sh a
Temperature 50
Temperature 53
Temperature 59
Score:  53.94009927058016
Starting  bt a
Temperature 62
Temperature 53
Temperature 59
Score:  58.20180186653031
Starting  h4 a
Temperature 65
Temperature 71
Temperature 67
Score:  67.7729666092156
Starting  bl a
Temperature 65
Temperature 60
Temperature 71
Score:  65.37842760747374
Starting  br a
Temperature 25
Temperature 24
Temperature 22
Score:  23.69220513035094
Starting  ss d
Temperature 54
Temperature 47
Temperature 52
Score:  51.000349850901756
Starting  sh d
Temperature 58
Temperature 55
Temperature 48
Score:  53.71423736324876
Starting  bt d
Temperature 59
Temperature 55
Temperature 64
Score:  59.37684511348298
Starting  h4 d
Temperature 51
Temperature 48
Temperature 51
Score:  49.95053264236875
Starting  bl d
Temperature 65
Temperature 63
Temperature 62
Score:  63.538875668025945
Starting  br d
Temperature 23
Temperature 27
Temperature 20
Score:  23.51428489186686
Starting  ss y
Temperature 63
Temperature 65
Temperature 63
Score:  63.801670883676714
Starting  sh y
Temperature 71
Temperature 60
Temperature 55
Score:  61.88097604696974
Starting  bt y
Temperature 60
Temperature 59
Temperature 63
Score:  60.685679552834465
Starting  h4 y
Temperature 49
Temperature 70
Temperature 64
Score:  60.81926419244824
Starting  bl y
Temperature 70
Temperature 64
Temperature 75
Score:  69.7444557099917
Starting  br y
Temperature 24
Temperature 26
Temperature 30
Score:  26.740730730711075
>> (average '(10 31 27 50 27 24 7 12 16 36 22 24 27 29 49 17 26 13))
149/6
>> (/ 149 6.00)
24.833333333333332
>> (adj-load)
>> (know-font 'br)
Temperature 28
Temperature 33
Temperature 37
Temperature 10
Temperature 7
Temperature 59
Temperature 28
Temperature 24
Temperature 66
Temperature 39
Temperature 12
Temperature 71
Temperature 10
Temperature 9
Temperature 13
Temperature 13
Temperature 3
Temperature 14
Temperature 47
Temperature 23
Temperature 23
Temperature 12
Examiner had no answer for that
Temperature 15
Temperature 5
Temperature 47
>>  (know-font 'br)
Temperature 28
Temperature 42
Temperature 26
Temperature 11
Temperature 6
Temperature 70
Temperature 40
Temperature 35
Temperature 66
Temperature 52
Temperature 33
Temperature 47
Temperature 23
Temperature 4
Temperature 24
Temperature 10
Temperature 7
Temperature 17
Temperature 49
Temperature 25
Temperature 26
Temperature 15
Examiner had no answer for that
Temperature 12
Temperature 8
Temperature 35
>> (define power
  (lambda (x y)
    (exp (* y (log x)))))
>> 
; log base b of a
(define log-b
  (lambda (b a)
    (/ (log a) (log b))))
>> (log-b 2 2.5)
1.3219280948873624
>> (/ 14 1.32)
10.606060606060606
>> (log-b 2 1.6)
0.6780719051126377
>> (/ 11 0.678)
16.224188790560472
>> (log-b 2  3.125)
1.6438561897747248
>> (/ 20 1.64)
12.195121951219512
>> (log-b 2 4.4)
2.137503523749935
>> (/ 65.5 2.1375)
30.643274853801167
>> (log-b 2 55)
5.78135971352466
>> (/ 104.5 5.78)
18.079584775086506
>> (log-b 2 3.125)
1.6438561897747248
>> (/ 24 1.644)
14.598540145985403
>> (/ 17 24)
17/24
>> (/ 17 24.0)
0.7083333333333334
>> (* 0.708 1.644)
1.1639519999999999
>> (power 2 1.164)
2.2407784283883516
>> (* 1.6 2.24)
3.5840000000000005
>> (/ 80 5)
16
>> (/ 22 5.0)
4.4
>>  (log-b 2 4.4)
2.137503523749935
>> (/ 55.5 2.13750352)
25.96486952217978
>> (/ 16 25.9648)
0.6162188809465122
>> (power 2 0.61621)
1.5328430659980303
>> (* 5 1.533)
7.664999999999999
>> (log 0.016)
-4.135166556742356
>> (log (/ 2.5 1000000))
-12.89921982609012
>> (/ 95.32 2.7)
35.3037037037037
>> (log-b 10 35.3037)
1.5478202239536911
>> (+ 15.8 1.55)
17.35
>> (/ 0.016 (/ 2.5 1000000))
6400.0
>> (log-b 10 6400)
3.8061799739838866
>> (/ 99.6 0.34)
292.9411764705882
>> (- 15.6 12.35)
3.25
>> (power 10 3.25)
1778.2794100389244
>> (log-b 10 2750)
3.4393326938302624
>> (/ 2.5 2)
1.25
>> (log-b 2.5 2)
0.75647079736603
>> (/ 14 0.7565)
18.506278916060808
>> (log-b 2 1.6)
0.6780719051126377
>> (/ 11 0.67807)
16.222513899744865
>> (/ 5 1.6)
3.125
>> (log-b 2 3.125)
1.6438561897747248
>> (/ 26 1.64386)
15.816432056257831
>> (/ 22 5)
22/5
>> (/ 22.0 5)
4.4
>> (log-b 2 4.4)
2.137503523749935
>> (/ 55.5 2.1375)
25.964912280701753
>> (/ 24 1.64386)
14.59978343654569
>> (* 27 0.62)
16.74
>> (* 0.62 11.1)
6.882
>> (* 0.62 15.9)
9.858
>> (* 0.62 59.5)
36.89
>> (* 0.62 8.5)
5.27
>> (/ 5.27 3.4)
1.5499999999999998
>> (power 2 1.549999)
2.9281693622382097
>> (/ -128 1.8)
-71.11111111111111
>> (* 0.67 5.08)
3.4036000000000004
>> (* 5.27 3.404)
17.939079999999997
>> (/ 740 295)
148/59
>> (/ 740 295.0)
2.5084745762711864
>> (/ 29.0 44)
0.6590909090909091
>> (* 2.51 0.66 (/ 1 0.91))
1.82043956043956
>> (* 5.27 1.82)
9.5914
>> (/ 1 0.38)
2.6315789473684212
>> (* 2.63 0.66)
1.7358
>> (/ 230 290)
23/29
>> (/ 230.0 290)
0.7931034482758621
>> (* 0.7929 1.736)
1.3764744
>> (* 1.3765 5.27)
7.254155
>> (power 180 6)
3.4012224000000008e13
>> (* 2.2e-13 3.4e13)
7.4799999999999995
>> (power 90 6)
5.314409999999999e11
>> (* 2.2e-13 5.3e11)
0.1166
>> (* 0.027 90)
2.43
>> (log-b 10 0.4)
-0.39794000867203755
>> (+ -0.36 -0.398 2.43 0.1166)
1.7886000000000002
>> (load "curve-cast.ss")

Error in open-input-file: error opening "curve-cast.ss": No such file or directory.
Type (debug) to enter the debugger.
>> (load "curve-cast.ss")
>> (curve-weights '*strong-right* 3 19)

Error: incorrect number of arguments to #<procedure curve-score>.
Type (debug) to enter the debugger.
>>  (load "curve-cast.ss")
>> (curve-weights '*strong-right* 3 19)
(0 0
   99.996
   99.996
   59.483
   0
   0
   0
   0
   0
   34.451
   99.996
   27.369
   0
   0
   0
   0
   0
   99.996
   27.369
   0)
>> (curve-weights '*strong-left* 3 19)
(0 27.369
   0
   0
   0
   0
   0
   0
   27.369
   99.996
   0
   0
   0
   0
   0
   0
   59.483
   99.996
   0
   0
   0)
>> (define arc-score
  (lambda (curve-dist)
    (round-3 (min 100 (max 0 (- 100 (* 60.0 curve-dist)))))))
>>  (curve-weights '*strong-left* 3 19)
(0 41.895
   0
   0
   0
   0
   0
   0
   41.895
   99.997
   0
   0
   0
   0
   0
   19.937
   67.586
   99.997
   0
   0
   0)
>> (define arc-score
  (lambda (curve-dist)
    (round-3 (min 100 (max 0 (- 100 (* 50.0 curve-dist)))))))
>>  (curve-weights '*strong-left* 3 19)
(2.278
  51.579
  0
  0
  0
  0
  0
  2.278
  51.579
  99.998
  0
  0
  0
  0
  0
  33.281
  72.989
  99.998
  0
  0
  0)
>> (define arc-score
  (lambda (curve-dist)
    (round-3 (min 100 (max 0 (- 100 (* 40.0 curve-dist)))))))
>>  (curve-weights '*strong-left* 3 19)
(21.822
  61.263
  0
  0
  0
  0
  0
  21.822
  61.263
  99.998
  0
  0
  0
  0
  10.928
  46.625
  78.391
  99.998
  0
  0
  0)
>> (arc-radius '*strong-left* 3 19)
1.5810907627331205
>> (all-from-center '*strong-left* 3 19)
(3.5355339059327378
  2.5495097567963922
  1.5811388300841898
  0.7071067811865476
  0.7071067811865476
  1.5811388300841898
  2.5495097567963922
  3.5355339059327378
  2.5495097567963922
  1.5811388300841898
  0.7071067811865476
  0.7071067811865476
  1.5811388300841898
  2.5495097567963922
  3.8078865529319543
  2.9154759474226504
  2.1213203435596424
  1.5811388300841898
  1.5811388300841898
  2.1213203435596424
  2.9154759474226504)
>> (arc-dists '*strong-left* 3 19)
(1.9544431431996172
  0.9684189940632717
  4.8067351069214226e-5
  0.873983981546573
  0.873983981546573
  4.8067351069214226e-5
  0.9684189940632717
  1.9544431431996172
  0.9684189940632717
  4.8067351069214226e-5
  0.873983981546573
  0.873983981546573
  4.8067351069214226e-5
  0.9684189940632717
  2.2267957901988336
  1.3343851846895298
  0.5402295808265218
  4.8067351069214226e-5
  4.8067351069214226e-5
  0.5402295808265218
  1.3343851846895298)
>> (arc-score 4.8067351069214226e-5)
99.998
>> (curve-signs '*strong-left* 3 19)
(1.0 1.0
     0.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0)
>> (points-curve '(3 18 19))

Error: variable points-curve is not bound.
Type (debug) to enter the debugger.
>> (point-curve '(3 18 19))

Error: variable point-curve is not bound.
Type (debug) to enter the debugger.
>> (load "draft-curve.ss")
>>  (points-curve '(3 18 19))
0.083
>> (load "curve-cast.ss")
>>  (curve-signs '*strong-left* 3 19)
(1.0 1.0
     0.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0)
>> (points-curve 3 3 19)

Error: incorrect number of arguments to #<procedure points-curve>.
Type (debug) to enter the debugger.
>> (points-curve '(3 3 19))
0
>> (abs (points-curve (list 3 3 19)))
0
>> (< 0 0.06)
#t
>> (load "curve-cast.ss")
>>  (curve-signs '*strong-left* 3 19)
(1.0 1.0
     0.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0)
>> (define lcs (lambda (p1 pt p2)
(if (< (abs (points-curve (list p1 pt p2))) 0.06)
		1.0
		(curve-sign p1 pt p2)))
)
>> (lcs 3 3 19)
1.0
>> (curve-label-sign '*strong-left*)
1
>>  (load "curve-cast.ss")
>>  (curve-signs '*strong-left* 3 19)
(1.0 1.0
     1.0
     0.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     1.0
     0.0
     0.0
     0.0
     1.0
     1.0
     1.0
     1.0
     1.0
     0.0
     0.0)
>>  (curve-weights '*strong-left* 3 19)
(2.278
  51.579
  99.998
  0
  0
  0
  0
  2.278
  51.579
  99.998
  56.301
  0
  0
  0
  0
  33.281
  72.989
  99.998
  99.998
  0
  0)
>> (part-curve '(48 37 22 25))
0.15
>> (power 10 15.7)
5.011872336272719e15
>> (power 10 15.8)
6.309573444801966e15
>> (power 10 17.4)
2.511886431509573e17
>> (power 10 3)
1000.0000000000007
>> (+ 2.5e17 6.3e15 5.0e15)
2.613e17
>> (/ 2.5e17 2.61e17)
0.9578544061302682
>> (/ 5.0e15 2.61e17)
0.019157088122605363
>> (power 10 11.8)
6.30957344480196e11
>> (/ 5.0e15 6.30957344480196e11)
7924.465962305532
>> (/ 0.016 (/ 2.5 1000000)
)
6400.0
>> (/ 0.0093 (/ 18 1000000))
516.6666666666666
>> (- 100 69)
31
>> ( - 322 37)
285
>> (/ 285 9.0)
31.666666666666668
>> (define marsbarf (lambda (y) (- 18 (/ (- y 37) 9.0))))
>> (marsbarf 227)
-3.1111111111111107
>> (define marsbarf (lambda (y) (- 18 (/ (- y 37) 31.6667))))
>> (marsbarf 227)
12.000006315782827
>> (define marsbarf (lambda (y) (power 10 (- 18 (/ (- y 37) 31.6667)))))
>> (map marsbarf '(59 109 115 225 236 272 305.5))
(2.0195931509204502e17
  5.32498247515135e15
  3.4422681464173555e15
  1.1565492838909045e12
  5.197519036221485e11
  3.7927584102134224e10
  3319415035.134261)
>> (apply + (2.0195931509204502e17
  5.32498247515135e15
  3.4422681464173555e15
  1.1565492838909045e12
  5.197519036221485e11
  3.7927584102134224e10
  3319415035.134261))

Error: attempt to apply non-procedure 2.0195931509204502e17.
Type (debug) to enter the debugger.
>>  (apply + '(2.0195931509204502e17
  5.32498247515135e15
  3.4422681464173555e15
  1.1565492838909045e12
  5.197519036221485e11
  3.7927584102134224e10
  3319415035.134261))
2.107282832618004e17
>> (define scalo (lambda (x) (/ x 2.107282832618004e17)))
>> (map scalo '(2.0195931509204502e17
  5.32498247515135e15
  3.4422681464173555e15
  1.1565492838909045e12
  5.197519036221485e11
  3.7927584102134224e10
  3319415035.134261))
(0.9583873221286525
  0.02526942464830791
  0.01633510268833168
  5.4883438805129635e-6
  2.466455359371146e-6
  1.799833582614751e-7
  1.575210970143174e-8)
>> (/ 5 1000000)
1/200000
>> (/ 5 1000000.0)
5e-6
>> (- 376 93)
283
>> (/ 283 9.0)
31.444444444444443
>> (define marsbarf (lambda (y) (power 10 (- 18 (/ (- y 37) 31.6667)))))
>>  (define marsbarf (lambda (y) (power 10 (+ 9 (/ (- y 93) 31.444)))))
>> (map marsbarf '(106 179 298 307 365))
(2590797118.8695383
  5.432765877202259e11
  3.307705061046472e15
  6.393665400235816e15
  4.469911701273825e17)
>> (apply + '(2590797118.8695383
  5.432765877202259e11
  3.307705061046472e15
  6.393665400235816e15
  4.469911701273825e17)
)
4.5669308645604966e17
>> (define scalo (lambda (x) (/ x 4.5669308645604966e17))
)
>> (map scalo '(2590797118.8695383
  5.432765877202259e11
  3.307705061046472e15
  6.393665400235816e15
  4.469911701273825e17)
)
(5.672950162162935e-9
  1.1895879395417752e-6
  0.007242730751004685
  0.013999917208843311
  0.9787561567792623)
>> (map marsbarf '(106 148 193 298 306 365))
(2590797118.8695383
  5.612305852176419e10
  1.5144570622405967e12
  3.307705061046472e15
  5.942200956880328e15
  4.469911701273825e17)
>> (apply + '(2590797118.8695383
  5.612305852176419e10
  1.5144570622405967e12
  3.307705061046472e15
  5.942200956880328e15
  4.469911701273825e17)
)
4.562426493162272e17
>> (define scalo (lambda (x) (/ x 4.562426493162272e17)))
>> (map scalo '(2590797118.8695383
  5.612305852176419e10
  1.5144570622405967e12
  3.307705061046472e15
  5.942200956880328e15
  4.469911701273825e17)
)
(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
  0.979722458646271)
>> (/ 70 1000000.0)
7e-5
>> (* 1000 7e-5)
0.06999999999999999
>> (apply + '(2590797118.8695383
  5.612305852176419e10
  1.5144570622405967e12
  3.307705061046472e15
  5.942200956880328e15))
9.25147918884468e15
>> (define scalo (lambda (x) (/ x 25147918884468e15)))
>> (map scalo '(2590797118.8695383
  5.612305852176419e10
  1.5144570622405967e12
  3.307705061046472e15
  5.942200956880328e15))
(1.0302232684827377e-19
  2.231717812499675e-18
  6.022196386103202e-17
  1.3152997177390277e-13
  2.3628996833413457e-13)
>> (apply + '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
0.020277541353729014
>> ((define scalo (lambda (x) (/ x 0.020277541353729014)))
)

Error: invalid context for definition of scalo.
Type (debug) to enter the debugger.
>>  ((define scalo (lambda (x) (/ x 0.020277541353729014)))
)

Error: invalid context for definition of scalo.
Type (debug) to enter the debugger.
>> (define scalo (lambda (x) (/ x 0.020277541353729014)))
>> (map scalo '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
(2.80041392947572e-7
  6.066387587990975e-6
  1.6369891033930122e-4
  0.35753256247226517
  0.6422973921884146)
>> (/ 5 1000000.0)
5e-6
>> (+ 2.7 1.6 2.5e-4 8e-6)
4.300258000000001
>> (/ 2.7 4.3)
0.6279069767441862
>> (/ 1.6 4.3)
0.372093023255814
>> (/ 2.5e-4 4.3)
5.8139534883720933e-5
>> (/ 3e-5 4.3)
6.976744186046512e-6
>> (/ 8e-6 4.3)
1.8604651162790697e-6
>> (apply + '((5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
)

Error in +: (5.678550926250268e-9 1.230114251832354e-7 3.3194114239655587e-6 0.007249881320836059 0.01302421193149288) is not a number.
Type (debug) to enter the debugger.
>> (apply + '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
0.020277541353729014
>> (/ 0.01302421 0.020277541)
0.6422973081400748
>> (/ 0.007249881320 0.020277541)
0.35753256866796623
>> (/ 3.3194114239655587e-6 0.020277541)
1.636989131949263e-4
>> (/ 1.230114251832354e-7  0.020277541)
6.066387693815311e-6
>> (/ (5.678550926250268e-9 0.020277541)
)

Error: attempt to apply non-procedure 5.678550926250268e-9.
Type (debug) to enter the debugger.
>> (/ 5.678550926250268e-9 0.020277541)
2.800413978327189e-7
>> (+ (5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288))

Error: attempt to apply non-procedure 5.678550926250268e-9.
Type (debug) to enter the debugger.
>> (+ 5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288)
0.020277541353729014
>> (define scalo  (lambda (x) (/ x 0.020277541353729014)))
>> (map scalo '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288))
(2.80041392947572e-7
  6.066387587990975e-6
  1.6369891033930122e-4
  0.35753256247226517
  0.6422973921884146)
>> (apply + '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
0.020277541353729014
>>  (define scalo  (lambda (x) (/ x 0.020277541353729014)))
>> (map scalo '(5.678550926250268e-9
  1.230114251832354e-7
  3.3194114239655587e-6
  0.007249881320836059
  0.01302421193149288
))
(2.80041392947572e-7
  6.066387587990975e-6
  1.6369891033930122e-4
  0.35753256247226517
  0.6422973921884146)
>> (marsbarf 180)
5.845525499508875e11
>> (map marsbarf '(306 298 180 148 106))
(5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383)
>> (+ 5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383)
9.25054928433239e15
>> (define scalo  (lambda (x) (/ x 9.25054928433239e15)))
>> (map scalo '(5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383)
)
(0.6423619586508884
  0.3575685031643165
  6.319111784431452e-5
  6.066997407042579e-6
  2.800695438980644e-7)
>> (/ (/ 0.08 1000000) (+ 0.027 0.016))
1.86046511627907e-6
>> (map marsbarf '(365 306 298 180 148 106))
(4.469911701273825e17
  5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383)
>> (+ 4.469911701273825e17
  5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383)
4.562417194117149e17
>> (define scalo  (lambda (x) (/ x 4.562417194117149e17)))
>> (map scalo '(4.469911701273825e17
  5.942200956880328e15
  3.307705061046472e15
  5.845525499508875e11
  5.612305852176419e10
  2590797118.8695383))
(0.9797244555007811
  0.013024238477231529
  0.00724989609742721
  1.2812343218077876e-6
  1.2301167590313776e-7
  5.678562500181159e-9)
>> (/ 1 1000000.0)
1e-6
>> (/ 5.678562500181159e-9 1e-6
)
0.0056785625001811585
>> (/ 0.000008 100)
8e-8
>> (+ 78.08 0.0093)
78.0893
>> (/ 78.08 78.0893)
0.9998809055786132
>> (/ 0.0093 78.0893)
1.1909442138679691e-4
>> (/ 18.18e-5 0.780893)
2.3281038503354494e-4
>> (/ 0.63 7.0e-6)
90000.0
>> (/ 0.37 7.0e-6)
52857.142857142855
>> (/ 5.8e-5 7.0e-6)
8.285714285714286
>> (/ 0.64 6.1e-6)
104918.03278688525
>> (/ 0.36 6.1e-6)
59016.393442622946
>> (/ 6.3e-5 6.1e-6)
10.327868852459016
>> (/ 0.7808 1.14e-5)
68491.22807017545
>> (/ 1 1000000)
1/1000000
>> (/ 0.7808 (/ 1 1000000)
)
780800.0000000001
>> (/ 1 1000000.0)
1e-6
>> (/ 0.7808 1.14e-6)
684912.2807017544
>> (/ 0.0093 1.14e-6)
8157.894736842104
>> (/ 18.18 1.14)
15.947368421052632
>> (/ 90000 8.3)
10843.373493975903
>> (/ 105000 10.3)
10194.174757281553
>> (/ 52900 8.3)
6373.493975903614
>> (/ 10200 10.3)
990.2912621359222
>> (/ 59000 10.3)
5728.155339805825
>> (/ 780000 16.0)
48750.0
>> (/ 8200 16.0)
512.5
>> (/ 0.034 7e-6)
4857.142857142858
>> (/ 0.98 1.3e-6)
753846.1538461538
>> (/ 0.9532 2.5e-6)
381280.0
>> (log-b 10 15.55)
1.1917303933628562
>> (log-b 10 12.2)
1.0863598306747482
>> (power 10 15.55)
3.548133892335782e15
>> (power 10 12.2)
1.5848931924611147e12
>> (/ 3.548133892335782e15
1.5848931924611147e12
)
2238.721138568355
>> (define bisegment-curve-cast
  (lambda (curve1 curve2 p1 mid p2)
    (let
	([seg1 (curve-weights curve1 p1 mid)]
	 [seg2 (curve-weights curve2 mid p2)])
      (map + seg1 seg2))))
>> (bisegment-curve-cast '*straight* '*strong-right* 17 19 6)
(8.425
  8.425
  8.425
  52.998000000000005
  90.884
  8.425
  8.425
  54.075
  54.075
  66.053
  115.795
  143.11599999999999
  54.075
  54.075
  100.0
  100.0
  107.882
  155.698
  100.0
  100.0
  100.0)
>> (curve-weights '*strong-right* 19 6)
(0 0
   0
   44.573
   82.459
   0
   0
   0
   0
   11.978
   61.72
   89.041
   0
   0
   0
   0
   7.882
   55.698
   0
   0
   0)
>> (curve-weights '*straight* 17 19)
(8.425
  8.425
  8.425
  8.425
  8.425
  8.425
  8.425
  54.075
  54.075
  54.075
  54.075
  54.075
  54.075
  54.075
  100.0
  100.0
  100.0
  100.0
  100.0
  100.0
  100.0)
>> (load "curve-cast.ss")
>> (past-segment 17 18 19)
#f
>> (past-segment 17 4 19)
#t
>> (midpoint 3 4)

Error: incorrect number of arguments to #<procedure midpoint>.
Type (debug) to enter the debugger.
>> (midpoint '(3 4))

Error in caar: incorrect list structure (3 4).
Type (debug) to enter the debugger.
>> (midpoint '((2 6) (2 4)))
(2 5)
>> (midpoint (map point-coords '(3 4))
)
(0 7/2)
>>  (load "curve-cast.ss")
>> (past-segment 17 18 19)
#t
>>  (past-segment 17 4 19)
#t
>>  (load "curve-cast.ss")
>> (past-segment 17 18 19)
#f
>>  (past-segment 17 4 19)
#f
>> (past-segment 17 9 19)
#f
>>  (load "curve-cast.ss")
>>  (past-segment 17 18 19)
1
>>  (past-segment 17 4 19)
1
>>  (past-segment 17 9 19)
0
>>  (load "curve-cast.ss")
>> (past-segment 16 8 19)
1
>> (past-segment 16 9 19)
0
>> (past-segment 16 10 19)
0
>> (past-segment 16 11 19)
0
>> (past-segment 16 12 19)
0
>> (past-segment 16 13 19)
1
>> (past-segment 16 1 19)
1
>> (past-segment 16 2 19)
0
>>  (load "curve-cast.ss")

Error in read: unexpected close bracket on #<input port curve-cast.ss>.
Type (debug) to enter the debugger.
>> (load "curve-cast.ss")
>>  (curve-weights '*straight* 17 19)
(8.425
  8.425
  8.425
  0
  8.425
  8.425
  8.425
  54.075
  54.075
  54.075
  0
  54.075
  54.075
  54.075
  100.0
  100.0
  0
  0
  0
  100.0
  100.0)
>> (map (lambda (pt)
	    (within-segment p1 pt p2)) *all-points*)

Error in lookup: item ((names (p2 p p2-act)) (roles (left-tail circle))) not found..
Type (debug) to enter the debugger.
>> (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      (list leg-sq-diff out-leg1-sq out-leg2-sq))))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
((11.999999999999998 8 20)
 (7.000000000000002 5 13)
 (4.000000000000001 4 8)
 (3.0 5 5)
 (4.000000000000001 8 4)
 (7.000000000000002 13 5)
 (11.999999999999998 20 8)
 (9.000000000000002 5 17)
 (4.000000000000001 2 10)
 (1.0000000000000004 1 5)
 (0.0 2 2)
 (1.0000000000000004 5 1)
 (4.000000000000001 10 2)
 (9.000000000000002 17 5)
 (8.0 4 16)
 (3.0 1 9)
 (0.0 0 4)
 (-1.0 1 1)
 (0.0 4 0)
 (3.0 9 1)
 (8.0 16 4))
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      mid-leg-sq)))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(1.0 1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0
     1.0)
>>  (map (lambda (pt)
            (within-segment 17 pt 20)) *all-points*)
(2.25 2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25
      2.25)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
     hypotenuese-sq)))
>>  (map (lambda (pt)
            (within-segment 17 pt 20)) *all-points*)
(16.249999999999996
  10.25
  25/4
  4.25
  4.25
  25/4
  10.25
  13.25
  7.249999999999999
  3.2499999999999996
  1.2500000000000002
  1.2500000000000002
  3.2499999999999996
  7.249999999999999
  49/4
  25/4
  9/4
  1/4
  1/4
  9/4
  25/4)
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(12.999999999999998
  8.000000000000002
  5.000000000000001
  4
  5.000000000000001
  8.000000000000002
  12.999999999999998
  10.000000000000002
  5.000000000000001
  2.0000000000000004
  1
  2.0000000000000004
  5.000000000000001
  10.000000000000002
  9
  4
  1
  0
  1
  4
  9)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      (if (or
	   (> leg-sq-diff out-leg1-sq)
	   (> leg-sq-diff out-leg2-sq))
	  0 1))))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 0 0)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      (if (or
	   (> (+ 0.05 leg-sq-diff) out-leg1-sq)
	   (> (+ 0.05 leg-sq-diff) out-leg2-sq))
	  0 1))))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0)
>> (0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 0 0)

Error: attempt to apply non-procedure 0.
Type (debug) to enter the debugger.
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      (- leg-sq-diff out-leg1-sq))))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(3.9999999999999982
  2.0000000000000018
  8.881784197001252e-16
  -2.0
  -3.999999999999999
  -5.999999999999998
  -8.000000000000002
  4.000000000000002
  2.000000000000001
  4.440892098500626e-16
  -2.0
  -3.9999999999999996
  -5.999999999999999
  -7.999999999999998
  4.0
  2.0
  0.0
  -2.0
  -4.0
  -6.0
  -8.0)
>> (load "curve-cast.ss")
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
>> (define within-segment
  (lambda (p1 pt p2)
    (let*
	([mid (midpoint (map point-coords (list p1 p2)))]
	 [pt-length (real-point-grid-dist mid pt)]
	 [hypotenuese-sq (* pt-length pt-length)]
	 [mid-leg-sq (* 0.25 (points-dist-sq p1 p2))]
	 [out-leg1-sq (points-dist-sq p1 pt)]
	 [out-leg2-sq (points-dist-sq p2 pt)]
	 [leg-sq-diff (- hypotenuese-sq mid-leg-sq)])
      (list (- leg-sq-diff out-leg1-sq)
	    (- leg-sq-diff out-leg2-sq)))))
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
((3.9999999999999982 -8.000000000000002)
 (2.0000000000000018 -5.999999999999998)
 (8.881784197001252e-16 -3.999999999999999)
 (-2.0 -2.0)
 (-3.999999999999999 8.881784197001252e-16)
 (-5.999999999999998 2.0000000000000018)
 (-8.000000000000002 3.9999999999999982)
 (4.000000000000002 -7.999999999999998)
 (2.000000000000001 -5.999999999999999)
 (4.440892098500626e-16 -3.9999999999999996)
 (-2.0 -2.0)
 (-3.9999999999999996 4.440892098500626e-16)
 (-5.999999999999999 2.000000000000001)
 (-7.999999999999998 4.000000000000002)
 (4.0 -8.0)
 (2.0 -6.0)
 (0.0 -4.0)
 (-2.0 -2.0)
 (-4.0 0.0)
 (-6.0 2.0)
 (-8.0 4.0))
>>  (load "curve-cast.ss")
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 1 1)
>>  (load "curve-cast.ss")
>>  (map (lambda (pt)
            (within-segment 17 pt 19)) *all-points*)
(0 0 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 1 0 0)
>>  (curve-weights '*straight* 17 19)
(0 0
   8.425
   8.425
   8.425
   0
   0
   0
   0
   54.075
   54.075
   54.075
   0
   0
   0
   0
   100.0
   100.0
   100.0
   0
   0)
>>  (bisegment-curve-cast '*straight* '*strong-right* 17 19 6)
(0 0
   8.425
   52.998000000000005
   90.884
   0
   0
   0
   0
   66.053
   115.795
   143.11599999999999
   0
   0
   0
   0
   107.882
   155.698
   100.0
   0
   0)
>> (load "curve-cast.ss")
>>   (bisegment-curve-cast '*straight* '*strong-right* 17 19 6)
((0 0
    8.425
    8.425
    8.425
    0
    0
    0
    0
    54.075
    54.075
    54.075
    0
    0
    0
    0
    100.0
    100.0
    100.0
    0
    0)
 (0 0
    0
    44.573
    82.459
    0
    0
    0
    0
    11.978
    61.72
    89.041
    0
    0
    0
    0
    7.882
    55.698
    0
    0
    0))
>> (curve-weights '*strong-left* 19 6)
(0 0
   0
   0
   0
   99.998
   55.698
   0
   0
   0
   0
   0
   89.041
   61.72
   0
   0
   0
   0
   99.998
   82.459
   44.573)
>> (bisegment-curve-cast '*straight* '*strong-left* 17 19 6)
((0 0
    8.425
    8.425
    8.425
    0
    0
    0
    0
    54.075
    54.075
    54.075
    0
    0
    0
    0
    100.0
    100.0
    100.0
    0
    0)
 (0 0
    0
    0
    0
    99.998
    55.698
    0
    0
    0
    0
    0
    89.041
    61.72
    0
    0
    0
    0
    99.998
    82.459
    44.573))
>>  (load "curve-cast.ss")
>>  (bisegment-curve-cast '*straight* '*strong-left* 17 19 6)
(0 0
   8.425
   8.425
   8.425
   99.998
   55.698
   0
   0
   54.075
   54.075
   54.075
   89.041
   61.72
   0
   0
   100.0
   100.0
   199.998
   82.459
   44.573)
>> (part-curve '(25 41))
0.067
>> (curve-label 0.067)

Error in cdr: 0.067 is not a pair.
Type (debug) to enter the debugger.
>> (label-curve 0.067)

Error: incorrect number of arguments to #<procedure label-curve>.
Type (debug) to enter the debugger.
>> (curve-label '(25 28 11 10))
*square-right*
>> (curve-label '(21 24 27 10))
*slight-right*
>>  (curve-weights '*strong-left* 19 6)
(0 0
   0
   0
   0
   99.998
   55.698
   0
   0
   0
   0
   0
   89.041
   61.72
   0
   0
   0
   0
   99.998
   82.459
   44.573)
>>  (load "curve-cast.ss")
>>  (curve-weights '*strong-left* 19 6)
(0 7.882
   55.698
   99.998
   75.002
   99.998
   0
   0
   11.978
   61.72
   89.041
   50.002
   0
   0
   0
   0
   44.573
   82.459
   99.998
   0
   0)
>> (curve-weights '*square-right* 12 10)
(0 38.197
   79.289
   100.0
   79.289
   38.197
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0)
>>  (load "curve-cast.ss")
>>  (curve-weights '*square-right* 12 10)
(0 0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   38.197
   79.289
   100.0
   79.289
   38.197
   0)
>>  (load "curve-cast.ss")
>>  (curve-weights '*square-right* 12 10)
(0 38.197
   79.289
   100.0
   79.289
   38.197
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0
   0)
>>  (curve-weights '*square-right* 3 19)
(12.597
  58.907
  0
  0
  0
  0
  0
  20.711
  70.711
  79.289
  0
  0
  0
  0
  12.597
  58.907
  100.0
  79.289
  0
  0
  0)
>> (points-curve (list 19 19 6))
0
>> (load "curve-cast.ss")
>>  (points-curve (list 19 19 6))
0
>>  (curve-weights '*square-right* 3 19)
(12.597
  58.907
  100.0
  0
  0
  0
  0
  20.711
  70.711
  79.289
  29.289
  0
  0
  0
  12.597
  58.907
  100.0
  79.289
  100.0
  0
  0)
>> (bisegment-curve-cast '*straight* '*strong-left* 17 19 6)
(0 7.882
   64.123
   108.423
   83.42699999999999
   0
   0
   0
   11.978
   115.795
   143.11599999999999
   104.077
   0
   0
   0
   0
   144.573
   182.459
   100.0
   0
   0)
>> (bisegment-curve-cast '*straight* '*strong-right* 17 19 6)
(0 0
   8.425
   8.425
   8.425
   99.998
   82.459
   0
   0
   54.075
   54.075
   54.075
   50.002
   89.041
   0
   0
   100.0
   100.0
   199.998
   75.002
   99.998)
>> (get-norms a-arch)
((shape
   ((*simple* 40)
    (*bactrian* 30)
    (*cupped* 10)
    (*spiky-closure* -10)))
 (neighborhood (((dc n dc dc dc y dc dc) 20)))
 (contact (a1 (mt2 20) (2ms 15) (t2 11)) (a2 (t2 13) (m 20)))
 (tips ((location (3 10) (4 7) (10 6) (11 6))
        (orientation (*w* 10) (*n* 6) (*sw* 7) (*nw* 7) (*s* 6)))
       ((location (19 10) (18 7) (12 6))
        (orientation (*s* 10) (*se* 6) (*sw* 6) (*e* 7) (*n* 7))))
 (ends (((4 *w*) 40)
        ((20 *n*) 10)
        ((36 *sw*) 20)
        ((48 *nw*) 20)
        ((5 *w*) 10)
        ((20 *s*) 10)
        ((37 *sw*) 10)
        ((21 *s*) 10)
        ((48 *se*) 10))
       (((25 *s*) 40)
        ((51 *se*) 7)
        ((22 *s*) 7)
        ((25 *n*) 13)
        ((39 *sw*) 7)
        ((9 *e*) 7)))
 (curve
   ((*square-right* 10)
    (*straight* 9)
    (*slight-right* 9)
    (*slight-left* 7)
    (*strong-right* 7)))
 (short 10)
 (very-short 6)
 (wide 10)
 (half-wide 6)
 (medium-wt 10)
 (light 6)
 (roof-x-height 10)
 (floor-baseline 10)
 (floor-midline 6)
 (l-edge-lf 10)
 (l-edge-md 6)
 (r-edge-rt 10))
>> (lookup 'tips (get-norms a-arch))
((location (3 10) (4 7) (10 6) (11 6))
 (orientation (*w* 10) (*n* 6) (*sw* 7) (*nw* 7) (*s* 6)))
>> (lookup-list 'tips (get-norms a-arch))
(((location (3 10) (4 7) (10 6) (11 6))
  (orientation (*w* 10) (*n* 6) (*sw* 7) (*nw* 7) (*s* 6)))
 ((location (19 10) (18 7) (12 6))
  (orientation (*s* 10) (*se* 6) (*sw* 6) (*e* 7) (*n* 7))))
>> (exit)
debug> a
