Chez Scheme Transcript [Wed Nov 24 01:07:18 1999]
> (try-gridfont 'boat)
Try l draft l; accepted as l1 score 94.427 beat 10000.0 (15 18 49)
SchemeSGL-D Warning: draw!: requested color not available: cornsilk.

debug> n
>> (re-draw 'l)
>> (exit)
debug> e
Try a draft a; rejected as a (4 5 8 22 25 38 50 51)
promoted as a score 300.0 beat 10000.0 with (4 5 8 22 25 38 50 51)
Try d borrow b; accepted as d1 score 35.954 beat 10000.0 (4 5 19 20 22 39 50)
Try y draft y; rejected as y (12 20 22 25 28 43 50)
promoted as y score 300.0 beat 10000.0 with (12 20 22 25 28 43 50)
Try r draft r; accepted as r1 score 25.908 beat 10000.0 (4 5 20 50)
Try s draft s; accepted as s2 score 72.113 beat 10000.0 (4 7 9 25 48 50)
Borrowed role
Try t draft t; rejected as t (4 20 46 50)
promoted as t score 300.0 beat 10000.0 with (4 20 46 50)
Try p borrow b; accepted as p1 score 57.206 beat 10000.0 (8 9 23 25 26 36 49)
Borrowed role
Try h draft h; accepted as h1 score 50.712 beat 10000.0 (4 5 17 20 22 25)
Try q draft q; rejected as q (4 5 13 20 25 28 30 31)
promoted as q score 300.0 beat 10000.0 with (4 5 13 20 25 28 30 31)
Try w draft w; accepted as w1 score 52.118 beat 10000.0 (9 20 21 22 25 50 51)
Try v draft v; accepted as v1 score 58.216 beat 10000.0 (20 22 39 50)
Try j draft j; accepted as j1 score 54.275 beat 10000.0 (12 22 25 28 35 43)
Try m draft m; accepted as m1 score 77.737 beat 10000.0 (5 20 22 25 48 50)
Try k draft k; accepted as k1 score 51.847 beat 10000.0 (6 17 20 23 37 39 50)
Try o borrow b; accepted as o1 score 20.794 beat 10000.0 (4 5 20 22 39 50)

debug> n
>> (map re-draw alphabet)
(#<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>)
>> (exit)
debug> e
Try z draft z; rejected as z (4 5 6 22 39 48)
promoted as z score 300.0 beat 10000.0 with (4 5 6 22 39 48)
Try i draft i; accepted as i1 score 58.412 beat 10000.0 (3 15 25 49)
Try u draft u; rejected as u (8 11 20 23 25 28)
promoted as u score 300.0 beat 10000.0 with (8 11 20 23 25 28)
Try n draft n; accepted as n1 score 50.657 beat 10000.0 (4 5 20 22 25 50)
Try x draft x; accepted as x1 score 87.084 beat 10000.0 (4 5 6 22 39 51)
Borrowed role
Try q draft q; accepted as q1 score 9.576 beat 300.0 (4 5 20 22 25 28 31 39 50)
Try y borrow g; accepted as y1 score 32.742 beat 300.0 (20 22 25 39 41 50 52)
Try u draft u; reelected as v1 score 300.0 scores (300.0 300.0) (300.0 300.0) (8 11 20 23 25 28)
Try j draft j; rejected as j1 score 88.756 beaten-by 54.275 (3 10 11 22 26 37 38 50 53)

debug> n
>>  (map re-draw alphabet)
(#<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>
  #<void>)
>> (lookup-list 'z *scratchspace*)
((4 5 6 22 39 48) (300.0) ((() (10000.0))) 0)
>> (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as n1 score 300.0 scores (300.0 300.0) (300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0 300.0 300.0 300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as c1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0 300.0 300.0 300.0 300.0 300.0 300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as c1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as c1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as j1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as n1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as i1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as e2 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as e2 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as a2 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as i1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as n1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as o1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as i1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as s2 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as n1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as k1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as j1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as r1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as x1 score 300.0 scores (300.0 300.0) (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0) (4 5 6 22 39 48)
>> ((4 5 6 22 39 48)
 (300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0
   300.0)
 ((() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; accepted as z1 score 66.419 beat 300.0 (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 22 39 48)
   (300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0))
  (() (10000.0)))
 0)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as u1 score 300.0 beaten-by 66.419 (4 5 22 39)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0
     300.0))
  (() (10000.0)))
 1
 1)
>> (add-scratchspace '(z (4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0)) (() (10000.0)))
 1
 1)
)
>> (re-draw 'z)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 2
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as k1 score 300.0 beaten-by 66.419 (6 9 23 36 48 49 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 3
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as j1 score 300.0 beaten-by 66.419 (4 5 6 7 11 23 39 52)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 11 23 39 52) (300.0))
  ((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 4
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 11 23 39 52) (300.0))
  ((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0))
  (() (10000.0)))
 5
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as k1 score 300.0 beaten-by 66.419 (4 8 20 37 38 39)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 8 20 37 38 39) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0))
  (() (10000.0)))
 6
 1)
>> (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 8 20 37 38 39) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 7
 1)
>> (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; reelected as z1 score 121.99924999999999 scores (61.615 59.963) (300.0 66.419) (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (61.615 59.963 300.0 66.419)
 (((4 8 20 37 38 39) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((6 9 23 36 48 49 50) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 7)
>> (load "loop.ss")
>>  (add-scratchspace '(z (4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0)) (() (10000.0)))
 1
 1)
)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as e2 score 300.0 beaten-by 66.419 (4 6 7 20 36)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 6 7 20 36) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 2
 1)
>> (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; rejected as z1 score 58.446 beaten-by 66.419 (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 37 39 50) (58.446))
  ((4 6 7 20 36) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 3
 1)
>> *quanta-list*
(4 5 6 37 39 50)
>>  (add-scratchspace '(z (4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0)) (() (10000.0)))
 1
 1)
)
>>  (load "loop.ss")
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 37 39 50) champ (4 5 6 37 39 50)
rejected as z1 score 58.963 beaten-by 66.419 (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 37 39 50) (58.963))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 2
 1)
>> (cond [#t 5] [#t 3] [else 7])
5
>> (cond [#t 5] [#t 3] [else 7])
5
>> (cond [#t 5] [#t 3] [else 7])
5
>> (eq? 3 3 3)

Error: incorrect number of arguments to #<system procedure eq?>.
Type (debug) to enter the debugger.
>> (and (eq? '(4 5 6 37 39 50) '(4 5 6 37 39 50))
(eq? '(4 5 6 37 39 50) '(4 5 6 37 39 50)))
#f
>> (and (eq? 1 1) (eq? 1 1))
#t
>> (eq? '(4 5 6 37 39 50) '(4 5 6 37 39 50))
#f
>> (eq? '(4 5 6 37 39 50) '(4 5 6 37 39 50))
#f
>> (eq? '(4 5 6 37 39 50) '(4 5 6 37 39 50))
#f
>> (equal? '(4 5 6 37 39 50) '(4 5 6 37 39 50))
#t
>> (load "loop.ss")
>>  (add-scratchspace '(z (4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0)) (() (10000.0)))
 1
 1)
)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 10 11 23 26 39) champ (4 5 6 37 39 50)
rejected as j1 score 300.0 beaten-by 66.419 (4 5 6 7 10 11 23 26 39)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 10 11 23 26 39) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 2
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 37 39 50) champ (4 5 6 37 39 50)
reelected as z1 score 63.855 scores (61.291) (66.419) (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (61.291 66.419)
 (((4 5 6 7 10 11 23 26 39) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 2)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 20) champ (4 5 6 37 39 50)
rejected as c1 score 300.0 beaten-by 63.855 (4 5 6 7 20)
>> ((4 5 6 37 39 50)
 (61.291 66.419)
 (((4 5 6 7 20) (300.0))
  ((4 5 6 7 10 11 23 26 39) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 3
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; Margin of 1.7269999999999968
old (4 5 6 37 39 50) new (4 5 6 37 39 50) champ (4 5 6 37 39 50)
reelected as z1 score 110.47640000000001 scores (62.128 62.544) (300.0 61.291 66.419) (4 5 6 37 39 50)
>> ((4 5 6 37 39 50)
 (62.128 62.544 300.0 61.291 66.419)
 (((4 5 6 7 20) (300.0))
  ((4 5 6 7 10 11 23 26 39) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 3)
>> (check-gridletter 'z '(4 5 6 37 39 50))
(z1 63.349)
>> (cadr (check-gridletter 'z '(4 5 6 37 39 50)))
62.144
>>  (cadr (check-gridletter 'z '(4 5 6 37 39 50)))
63.781
>> (load "loop.ss")
>>  (add-scratchspace '(z (4 5 6 37 39 50)
 (66.419)
 (((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0)) (() (10000.0)))
 1
 1)
)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 7 8 11 24 25 28 50 52) champ (4 5 6 37 39 50)
rejected as z1 score 300.0 beaten-by 66.419 (4 5 7 8 11 24 25 28 50 52)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 2
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 8 25 37 38 50) champ (4 5 6 37 39 50)
rejected as z1 score 113.265 beaten-by 66.419 (4 5 6 7 8 25 37 38 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0))
  (() (10000.0)))
 3
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 4
 1)
>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 9 50) (300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 5
 1)
>> >>  (try-cat 'z) (lookup-list 'z *scratchspace*)

Error: variable >> is not bound.
Type (debug) to enter the debugger.
>> 
debug> i
#<system continuation in apply>                                   : d
#<continuation in this>                                           : s
  continuation:          #<continuation in this>
  free variables:
  0: 46137360
  1: #<procedure this>
#<continuation in this>                                           : d
#<continuation in this>                                           : s
  continuation:          #<continuation>
  free variables:
  0: #<procedure this>
  1: 16146808
  2: #<procedure this>
#<continuation in this>                                           : q

debug> n
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 9 50) (300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 6
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 7 11 24 25 28 52) champ (4 5 6 37 39 50)
rejected as j1 score 300.0 beaten-by 66.419 (4 5 7 11 24 25 28 52)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 7
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0))
  (() (10000.0)))
 8
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0))
  (() (10000.0)))
 9
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 10
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 11
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 8 10 11 25 26 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 8 10 11 25 26 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 12
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 20 37 48) champ (4 5 6 37 39 50)
rejected as e1 score 300.0 beaten-by 66.419 (4 5 6 7 20 37 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 13
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 7 37 39) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 7 37 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0))
  (() (10000.0)))
 14
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 15
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (5 7 36 39 51) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (5 7 36 39 51)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 16
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 23 39) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 23 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 23 39) (300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 17
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 23 39) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 23 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 23 39) (300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 18
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 20 22 23 38 39 48) champ (4 5 6 37 39 50)
rejected as m1 score 300.0 beaten-by 66.419 (4 5 20 22 23 38 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 19
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 11 23 39 52) champ (4 5 6 37 39 50)
rejected as j1 score 300.0 beaten-by 66.419 (4 5 6 7 11 23 39 52)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 20
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (3 4 5 6 22 34 39 48) champ (4 5 6 37 39 50)
rejected as f1 score 300.0 beaten-by 66.419 (3 4 5 6 22 34 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((3 4 5 6 22 34 39 48) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 21
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 39) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 22
 1)
>>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 23 39) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 23 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 23
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (5 6 7 36) champ (4 5 6 37 39 50)
rejected as c1 score 300.0 beaten-by 66.419 (5 6 7 36)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 24
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (3 4 5 6 22 34 39 48) champ (4 5 6 37 39 50)
rejected as r1 score 300.0 beaten-by 66.419 (3 4 5 6 22 34 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 25
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48) (300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 26
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 27
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (22 24 25 36 37) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (22 24 25 36 37)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 28
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 11 23 39 52) champ (4 5 6 37 39 50)
rejected as j1 score 300.0 beaten-by 66.419 (4 5 6 7 11 23 39 52)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 29
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 30
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (5 6 7 8 9 20 23 36) champ (4 5 6 37 39 50)
rejected as r1 score 300.0 beaten-by 66.419 (5 6 7 8 9 20 23 36)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 31
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 22 39 48) champ (4 5 6 37 39 50)
rejected as n1 score 300.0 beaten-by 66.419 (4 5 6 22 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 32
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 33
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 34
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 23 39) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 23 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 35
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 7 9 50) champ (4 5 6 37 39 50)
rejected as i1 score 300.0 beaten-by 66.419 (4 5 6 7 9 50)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 36
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 8 9 22 23 39 48) champ (4 5 6 37 39 50)
rejected as a2 score 300.0 beaten-by 66.419 (4 5 8 9 22 23 39 48)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 8 9 22 23 39 48) (300.0))
  ((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 37
 1)
>>> >>>  (try-cat 'z) (lookup-list 'z *scratchspace*) (re-draw 'z)
Try z draft z; old (4 5 6 37 39 50) new (4 5 6 10 11 22 26 38 39) champ (4 5 6 37 39 50)
rejected as a2 score 300.0 beaten-by 66.419 (4 5 6 10 11 22 26 38 39)
>>> ((4 5 6 37 39 50)
 (66.419)
 (((4 5 6 10 11 22 26 38 39) (300.0))
  ((4 5 8 9 22 23 39 48) (300.0))
  ((5 6 7 8 9 20 23 36) (300.0))
  ((22 24 25 36 37) (300.0))
  ((5 6 7 36) (300.0))
  ((4 5 6 7 39) (300.0))
  ((3 4 5 6 22 34 39 48) (300.0 300.0))
  ((4 5 6 7 11 23 39 52) (300.0 300.0))
  ((4 5 20 22 23 38 39 48) (300.0))
  ((4 5 6 7 23 39) (300.0 300.0 300.0 300.0))
  ((5 7 36 39 51) (300.0))
  ((4 5 7 37 39) (300.0))
  ((4 5 6 7 20 37 48) (300.0))
  ((4 5 6 7 8 10 11 25 26 50) (300.0))
  ((4 5 7 11 24 25 28 52) (300.0))
  ((4 5 6 7 9 50) (300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  ((4 5 6 7 8 25 37 38 50) (113.265))
  ((4 5 7 8 11 24 25 28 50 52) (300.0))
  ((4 5 22 39) (300.0))
  ((4 5 6 22 39 48)
   (300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0 300.0))
  (() (10000.0)))
 38
 1)
>>> >>> (try-gridfont 'standard-square)
Try r borrow c; old () new (4 5 20 23) champ (4 5 20 23)
accepted as r1 score 2.796 beat 10000.0 (4 5 20 23)

debug> n
>>>> (re-draw 'r)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Try r draft r; Margin of 0.3450000000000002
Sample check r (4 5 20 23) (r1 300.0)
old (4 5 20 23) new (4 5 20 23) champ (4 5 20 23)
reelected as r1 score 77.2695 scores (3.141 3.141) (300.0 2.796) (4 5 20 23)
>>>> ((4 5 20 23) (3.141 3.141 300.0 2.796) ((() (10000.0))) 0)
>>>> >>>> (check-gridletter 'r '(4 5 20 23))
(r1 2.427)
>>>> (load "loop.ss")
>>>> (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>> (lookup-list 'r *scratchspace*)
((4 5 20 23) (3.141) ((() (10000.0))) 0)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Try r draft r; Margin of 0.0
Sample check r (4 5 20 23) (r1 300.0)
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.214 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.141 3.287)
 (((4 5 20 23) (300.0 3.141)) (() (10000.0)))
 0)
>>>> >>>> *quanta-list*
(4 5 20 22 23)
>>>> (check-gridletter 'r '(4 5 20 23))
(r1 2.427)
>>>> *quanta-list*
(4 5 20 22 23)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Try r draft r; old (4 5 20 22 23) new (4 5 20 22 23 25 28) champ (4 5 20 22 23)
rejected as y2 score 300.0 beaten-by 3.214 (4 5 20 22 23 25 28)
>>>> ((4 5 20 22 23)
 (3.141 3.287)
 (((4 5 20 22 23 25 28) (300.0))
  ((4 5 20 23) (300.0 3.141))
  (() (10000.0)))
 1
 1)
>>>> >>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Try r draft r; Margin of 0.07299999999999995
Sample check r (4 5 20 22 23) (r1 300.0)
old (4 5 20 22 23) new (4 5 20 22 23) champ (4 5 20 22 23)
reelected as r1 score 64.8378 scores (3.141 14.62) (300.0 3.141 3.287) (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.141 14.62 300.0 3.141 3.287)
 (((4 5 20 22 23 25 28) (300.0))
  ((4 5 20 23) (300.0 3.141))
  (() (10000.0)))
 1)
>>>> >>>>  *quanta-list*
(4 5 20 22 23)
>>>> (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Try r draft r; Margin of 0.0
Sample check r (4 5 20 23) (r1 300.0)
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.141 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.141 3.141)
 (((4 5 20 23) (300.0 3.141)) (() (10000.0)))
 0)
>>>> >>>>  *quanta-list*
(4 5 20 23)
>>>> (check-gridletter 'r '(4 5 20 23))
(r1 2.427)
>>>> (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23)
Try r draft r; Inside the check of cat r quanta (4 5 20 22 23)
Margin of 0.0
Inside the check of cat r quanta (4 5 20 23)
Sample check r (4 5 20 23) (r1 300.0)
Inside the check of cat r quanta (4 5 20 23)
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.141 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.141 3.141)
 (((4 5 20 23) (300.0 3.141)) (() (10000.0)))
 0)
>>>> >>>> (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)

Error: variable answer is not bound.
Type (debug) to enter the debugger.
>>>> ((4 5 20 23) (3.141) ((() (10000.0))) 0)
>>>> >>>>  (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (re-draw 'r)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23) as r1
Try r draft r; old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 23)
rejected as r1 score 16.243 beaten-by 3.141 (4 5 20 22 23)
>>>> ((4 5 20 23)
 (3.141)
 (((4 5 20 22 23) (16.243)) (() (10000.0)))
 1
 1)
>>>> >>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23) as r1
Try r draft r; Inside the check of cat r quanta (4 5 20 22 23) as r1
Margin of 0.03600000000000003
Inside the check of cat r quanta (4 5 20 23) as r1
Sample check r (4 5 20 23) (r1 300.0)
Inside the check of cat r quanta (4 5 20 23) as r1
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.159 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.177 3.141)
 (((4 5 20 23) (300.0 3.141))
  ((4 5 20 22 23) (16.243))
  (() (10000.0)))
 1)
>>>> >>>> (eq? 'r (get-category 'r1))
#t
>>>>  (load "loop.ss")
>>>>   (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (re-draw 'r)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23) as r1
Try r draft r; Inside the check of cat r quanta (4 5 20 22 23) as r1
Margin of 0.03600000000000003
Inside the check of cat r quanta (4 5 20 23) as r1
Sample check r (4 5 20 23) (r1 300.0)
Inside the check of cat r quanta (4 5 20 23) as r1
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.159 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.177 3.141)
 (((4 5 20 23) (300.0 3.141)) (() (10000.0)))
 0)
>>>> >>>> *codelets-run*
57
>>>>  (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>> (re-draw 'r)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23) as r1
Try r draft r; Inside the check of cat r quanta (4 5 20 22 23) as r1
Margin of 0.03600000000000003
Inside the check of cat r quanta (4 5 20 23) as r1
Sample check r (4 5 20 23) (r1 300.0)
Inside the check of cat r quanta (4 5 20 23) as r1
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 22 23)
accepted as r1 score 3.159 beat 151.5705 (4 5 20 22 23)
>>>> ((4 5 20 22 23)
 (3.177 3.141)
 (((4 5 20 23) (300.0 3.141)) (() (10000.0)))
 0)
>>>> >>>> (load "loop.ss")
>>>>  (add-scratchspace '(r (4 5 20 23) (3.141) ((() (10000.0))) 0))
>>>>  (re-draw 'r)
>>>>  (try-cat 'r) (lookup-list 'r *scratchspace*) (re-draw 'r)
Inside the check of cat r quanta (4 5 20 22 23) as r1
Try r draft r; Inside the check of cat r quanta (4 5 20 22 23) as r1
Margin of 0.11299999999999999
Inside the check of cat r quanta (4 5 20 23) as r1
Sample check r (4 5 20 23) (r1 2.427)
Inside the check of cat r quanta (4 5 20 23) as r1
old (4 5 20 23) new (4 5 20 22 23) champ (4 5 20 23)
rejected as r1 score 3.2155 beaten-by 2.784 (4 5 20 22 23)
>>>> ((4 5 20 23)
 (2.427 3.141)
 (((4 5 20 22 23) (3.254 3.177)) (() (10000.0)))
 1
 1)
>>>> >>>> (exit)
debug> a
