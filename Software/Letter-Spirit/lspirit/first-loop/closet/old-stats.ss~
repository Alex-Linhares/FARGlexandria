(if (file-exists? "/u/gem/lspirit/data/psychdata")  
    (set! *data-path* "/u/gem/lspirit/data/")
    (set! *data-path* "./"))

(define collect-stats
  (lambda (cat hex n)
    (let
	([qls (q-list (hex->bin (string->list hex)) 0)])
      (if (< n 2)
	  (examine-gridletter cat qls)
	  (begin
	    (examine-gridletter cat qls)
	    (collect-stats cat hex (- n 1)))))))

(define examine-gridletter
  (lambda (attempt qls)
    (begin
      (set! *quanta-list* qls)
      (set! *quanta* (quanta-into-bits qls '()))
      (run-examiner)
      (if (< *codelets-run* 8000)
	  (examiner-cleanup))
      (printf "~s ~s ~s ~s " *the-font* attempt *answer* *codelets-run*)
      (cond
       [(>= *codelets-run* 8000) (printf "qt~%")]
       [(eq? attempt (get-category *answer*))
	(printf "rt ~s ~%" (examiner-goodness))]
       [else (printf "wr ~s ~%" (examiner-goodness))]))))   

(define gestalt-rec-gridletter
  (lambda (attempt qls)
    (begin
      (set! *quanta-list* qls)
      (set! *quanta* (quanta-into-bits qls '()))
      (gestalt-init)
      (let
	  ([answer (find-max *gestalt-index*)])
	(printf "~s ~s ~s " *the-font* attempt answer)
	(if (eq? attempt answer)
	    (printf "rt~%") (printf "wr~%"))))))

(define adjudicate-gridletter
  (lambda (attempt qls)
    (let* 
      ([dum1 (set! *quanta-list* qls)]
       [dum2 (set! *quanta* (quanta-into-bits qls '()))]
       [recognize (run-examiner)]
       [correct? (eq? attempt (get-category (car recognize)))])
      (if (and
	   (< *codelets-run* 8000)
	   correct?)
	  (begin
	    (style-rec)
	    'examiner-passed)
	  'examiner-flunked))))

(define seed-gridletter
  (lambda (attempt qls)
    (if (not (eq? 'examiner-flunked
		  (adjudicate-gridletter attempt qls)))
	(update-tf)
	(begin
	  (printf "Examiner failed on ~s, re-trying~%" attempt)
	  (seed-gridletter attempt qls)))))

(define seed-from-font
  (lambda (font attempt)
    (seed-gridletter attempt (that-letter font attempt))))

(define adjudicate-from-font
  (lambda (font attempt)
    (adjudicate-gridletter attempt (that-letter font attempt))))

(define seed-font-1
  (lambda (font)
    (begin
      (clear-tf)
      (seed-from-font font 'd))))

(define seed-font-2
  (lambda (font)
    (begin
      (clear-tf)
      (seed-from-font font 'c)
      (seed-from-font font 'f)
      (seed-from-font font 'y))))

(define seed-font-3
  (lambda (font)
    (begin
      (seed-from-font font 'd)
      (seed-from-font font 'i)
      (seed-from-font font 'q))))

(define seed-font-seeds
  (lambda (font) ; six seeds
    (seed-from-font font (nth 1 *seeds*))
    (seed-from-font font (nth 2 *seeds*))
    (seed-from-font font (nth 3 *seeds*))
    (seed-from-font font (nth 4 *seeds*))
    (seed-from-font font (nth 5 *seeds*))
    (seed-from-font font (nth 6 *seeds*))))

(define seed-font-4
  (lambda (font)
    (begin
      (seed-from-font font 'f)
      (seed-from-font font 'h)
      (seed-from-font font 'm)
      (seed-from-font font 't)
      (seed-from-font font 'v)
      (seed-from-font font 'y))))

(define adj-test-three
  (lambda (font letters)
    (let*
	([test-once
	  (lambda (letter)
	    (begin
	      (adjudicate-from-font font letter)
	      (set! *adj-data* (cons (round-3 *temperature*)
				     *adj-data*))))]
	 [test-three-times
	  (lambda (letter)
	    (begin
	      (set! *adj-data* '())
	      (test-once letter) (test-once letter) (test-once letter)
	      (printf "~s ~s ~s ~s ~s ~s ~s~%"
		      *trained* *test-phase*
		      letter font
		      (car *adj-data*)
		      (round-3 (average *adj-data*))
		      *adj-data*)))])
      (map test-three-times letters))))

(define adj-test-once
  (lambda (font letters)
    (let*
	([test-once
	  (lambda (letter)
	    (begin
	      (adjudicate-from-font font letter)
	      (set! *adj-data* (cons (round-3 *temperature*)
				     *adj-data*))))]
	 [test-once
	  (lambda (letter)
	    (begin
	      (set! *adj-data* '())
	      (test-once letter)
	      (printf "~s ~s ~s ~s~%"
		      *trained*
		      letter font
		      (car *adj-data*))))])
      (map test-once letters))))

(define adj-test-fonts-old
  (lambda (fonts letters)
    (if (eq? (length fonts) 1)
	(adj-test-three (car fonts) letters)
	(begin
	  (adj-test-three (car fonts) letters)
	  (adj-test-fonts (cdr fonts) letters)))))

(define adj-test-fonts
  (lambda (fonts letters)
    (if (eq? (length fonts) 1)
	(adj-test-once (car fonts) letters)
	(begin
	  (adj-test-once (car fonts) letters)
	  (adj-test-fonts (cdr fonts) letters)))))

(define adj-test-one-font-old
  (lambda (font fonts letters)
    (set! *trained* font)
    (set! *test-phase* 'phs1)
    (seed-font-1 font)
    (adj-test-fonts fonts letters)
    (set! *test-phase* 'phs2)
    (seed-font-2 font)
    (adj-test-fonts fonts letters)
    (set! *test-phase* 'phs3)
    (seed-font-3 font)
    (adj-test-fonts fonts letters)))

(define adj-test-one-font-quirk
  (lambda (font fonts letters)
    (set! *trained* font)
    (seed-font-4 font)
    (adj-test-fonts fonts letters)))

(define adj-test-one-font
  (lambda (font fonts letters)
    (set! *trained* font)
    (seed-font-seeds font)
    (adj-test-fonts fonts letters)))

(define adj-test-font-group
  (lambda (fonts letters)
    (let
	([test-one
	  (lambda (font)
	    (adj-test-one-font font fonts letters))])
      (map test-one fonts))))

(define full-adj-test
  (lambda ()
    (set! *seeds* '(c d f i q y))
    (adj-test-font-group
     '(benzene-left benzene-right boat close house)
     '(a k o x z))
    (adj-test-font-group
     '(hunt4 shorts slant snout standard-square)
     '(h l n s u))
    (set! *seeds* '(f h m t v y))
    (adj-test-font-group
     '(bowtie checkmark double-backslash flournoy-ranch funtnip)
     '(k n))
    (set! *seeds* '(c d f i q y))
    (adj-test-font-group
     '(boat close flournoy-ranch hint4 hunt4)
     '(e g k p t))
    (adj-test-font-group
     '(intersect sabretooth slash square-curl weird-arrow)
     '(b j l m r))))    

(define hex-rec
  (lambda (hex)
    (let* ([code (string->list hex)]
	   [bls (hex->bin code)])
      (set! *quanta* bls)
      (set! *quanta-list* (q-list *quanta* 0))
      (run-examiner))))

(define collect-stats
  (lambda (lt hex runs)
    (if (> runs 0)
	(let* ([code (string->list hex)]
	       [bls (hex->bin code)]
	       [myst (cons lt bls)]
	       [dummy (set! *quanta* (cdr myst))]
	       [dummy2 (set! *quanta-list* (q-list *quanta* 0))]
	       [run (run-examiner)]
	       [cat (get-category (car run))]
	       [ans-let (string->symbol
			 (substring
			  (symbol->string cat) 0 1))] 
	       [act (round-3 (cadr run))]
	       [step *codelets-run*]
	       [tmp (round-3 *temperature*)]
	       [seed *seed*]
	       [grade (if (and (eq? lt ans-let) (< step *max-codelets*))
		      'rt
		      'wr)])
	  (printf "~a as ~a ac ~a cd ~a tm ~a an ~a ~a ~a~%"
		  lt ans-let act step tmp grade hex *quanta-list*)
	  (collect-stats lt hex (- runs 1))))))

(define collect-stats-2 ; pre-adj-stats
  (lambda (lt hex runs)
    (if (> runs 0)
	(let* ([code (string->list hex)]
	       [bls (hex->bin code)]
	       [myst (cons lt bls)]
	       [dummy (set! *quanta* (cdr myst))]
	       [dummy2 (set! *quanta-list* (q-list *quanta* 0))]
	       [run (run-examiner)]
	       [dummy3 (if
			   (< *codelets-run* *max-codelets*)
			   (examiner-cleanup)
			   'garbage)])
	  (if
	      (< *codelets-run* *max-codelets*)
	      (printf "~a~%"
		      (list *answer* *fillers*))
	      (printf "no-answer~%"))
	  (collect-stats lt hex (- runs 1))))))

(define collect-stats
  (lambda (lt hex runs)
    (if (> runs 0)
	(let* ([code (string->list hex)]
	       [bls (hex->bin code)]
	       [myst (cons lt bls)]
	       [dummy (set! *quanta* (cdr myst))]
	       [dummy2 (set! *quanta-list* (q-list *quanta* 0))]
	       [run (run-examiner)]
	       [cat (get-category (car run))]
	       [ans-let (string->symbol
			 (substring
			  (symbol->string cat) 0 1))] 
	       [act (round-3 (cadr run))]
	       [step *codelets-run*]
	       [tmp (round-3 *temperature*)]
	       [seed *seed*]
	       [grade (if (and (eq? lt ans-let) (< step *max-codelets*))
		      'rt
		      'wr)])
	  (begin
	    (if (< *codelets-run* *max-codelets*)
		(examiner-cleanup))
	    (printf "~a as ~a ac ~a cd ~a tm ~a an ~a ~a ~a~%"
		    lt ans-let act step tmp grade hex (parts-score))
	    (collect-stats lt hex (- runs 1)))))))

; gridletters from 5.6 of GEM thesis
(define short-test
  (lambda (n filename)
    (transcript-on filename)
    (date-and-time)
    (collect-stats 'a "0fc00340000000" n)     ; SS-a
    (collect-stats 'b "0cc24b40000000" n)     ; SS-b
    (collect-stats 'c "04c00100080000" n)     ; stately-right-c
    (collect-stats 'd "0cc09b40000000" n)     ; SS-d
    (collect-stats 'e "0fc00b00000000" n)     ; SS-e
    (collect-stats 'f "4c012480000000" n)     ; SS-f
    (collect-stats 'g "0ccc0b49000000" n)     ; SS-g
    (collect-stats 'h "0c024b40000000" n)     ; SS-h
    (collect-stats 'i "08000480800000" n)     ; NORMALS i #1
    (collect-stats 'j "08080492800000" n)     ; NORMALS j #7
    (collect-stats 'k "02024900040010" n)     ; simple K (created)
    (collect-stats 'l "00012480000000" n)     ; SS-l
    (collect-stats 'm "00000fc00c0000" n)     ; NORMALS m #1
    (collect-stats 'n "04000b40080000" n)     ; NORMALS n #1
    (collect-stats 'o "04c00340080000" n)     ; NORMALS o #7
    (collect-stats 'p "0cc00b64000000" n)     ; SS-p
    (collect-stats 'q "0cc00b49000000" n)     ; SS-q
    (collect-stats 'r "04000900080000" n)     ; NORMALS r #3
    (collect-stats 's "0fc00840000000" n)     ; SS-s
    (collect-stats 't "0c402480000000" n)     ; SS-t
    (collect-stats 'u "00800b40010000" n)     ; NORMALS u #1
    (collect-stats 'v "00000a00010020" n)     ; NORMALS v #1
    (collect-stats 'w "00400ec0000020" n)
    (collect-stats 'x "00000000060090" n)     ; SS-x
    (collect-stats 'y "00cc0b49000000" n)     ; SS-y
    (collect-stats 'z "0cc00000060000" n)     ; SS-z
    (collect-stats 'a "020000c00000b0" n)
    (collect-stats 'b "00024800010060" n)
    (collect-stats 'c "00400000080020" n)
    (collect-stats 'd "080092400000d0" n)
    (collect-stats 'e "040003000a0040" n)
    (collect-stats 'f "18024900000840" n)
    (collect-stats 'g "0600024c088014" n)
    (collect-stats 'h "00824ac0040820" n)
    (collect-stats 'i "800000808a0820" n)
    (collect-stats 'j "00000240104000" n)
    (collect-stats 'k "00824a80040830" n)
    (collect-stats 'l "00014880820020" n)
    (collect-stats 'm "080003c00c0080" n)
    (collect-stats 'n "000008400000b0" n)
    (collect-stats 'o "04c00340080000" n)
    (collect-stats 'p "00c00364060000" n)
    (collect-stats 'q "00c00248060000" n)
    (collect-stats 'r "07000900000040" n)
    (collect-stats 's "0d800000010080" n)
    (collect-stats 't "08004040000090" n)
    (collect-stats 'u "000000400000d0" n)
    (collect-stats 'v "000006000900a0" n)
    (collect-stats 'w "00800e40020030" n)
    (collect-stats 'x "00800a000600d0" n)
    (collect-stats 'y "0a00024c088014" n)
    (collect-stats 'z "08c00000060040" n)
    (date-and-time)
    (transcript-off)))

; a test suite of VERY easy characters
(define easy-test
  (lambda (n filename)
    (transcript-on filename)
    (collect-stats 'a "0fc00340000000" n)     ; SS-a
    (collect-stats 'b "0cc24b40000000" n)     ; SS-b
    (collect-stats 'c "04c00100080000" n)     ; stately-right-c
    (collect-stats 'd "0cc09b40000000" n)     ; SS-d
    (collect-stats 'e "0fc00b00000000" n)     ; SS-e
    (collect-stats 'f "4c012480000000" n)     ; SS-f
    (collect-stats 'g "0ccc0b49000000" n)     ; SS-g
    (collect-stats 'h "0c024b40000000" n)     ; SS-h
    (collect-stats 'i "08000480800000" n)     ; NORMALS i #1
    (collect-stats 'j "08080492800000" n)     ; NORMALS j #7
    (collect-stats 'k "02024900040010" n)     ; simple K (created)
    (collect-stats 'l "00012480000000" n)     ; SS-l
    (collect-stats 'm "00000fc00c0000" n)     ; NORMALS m #1
    (collect-stats 'n "04000b40080000" n)     ; NORMALS n #1
    (collect-stats 'o "04c00340080000" n)     ; NORMALS o #7
    (collect-stats 'p "0cc00b64000000" n)     ; SS-p
    (collect-stats 'q "0cc00b49000000" n)     ; SS-q
    (collect-stats 'r "04000900080000" n)     ; NORMALS r #3
    (collect-stats 's "0fc00840000000" n)     ; SS-s
    (collect-stats 't "0c402480000000" n)     ; SS-t
    (collect-stats 'u "00800b40010000" n)     ; NORMALS u #1
    (collect-stats 'v "00000a00010020" n)     ; NORMALS v #1
    (collect-stats 'w "00400ec0000020" n)     ; [|/-w
    (collect-stats 'x "00000000060090" n)     ; SS-x
    (collect-stats 'y "00cc0b49000000" n)     ; SS-y
    (collect-stats 'z "0cc00000060000" n)     ; SS-z
    (date-and-time)
    (transcript-off)))

(define big-test
  (lambda (n file)
    (transcript-on file)
    (date-and-time)
    (run-train n)
    (run-no-train n)
    (run-fonts n)
    (run-majors n)
    (date-and-time)
    (transcript-off)))
    


;================================================[PSYCH DATA]=============
; The NORMALS dataset (for testing)

(define normal-test
  (lambda (n file)
    (transcript-on file)
    (date-and-time)
    (run-normals n)
    (date-and-time)
    (transcript-off)))

(define run-train
  (lambda (n)
    (printf "Testing all PSYCH-TRAIN~%")
    (collect-stats 'a "058002400b0000" n)
    (collect-stats 'a "0B800140010040" n)
    (collect-stats 'a "09800040030040" n)
    (collect-stats 'a "0f800340010000" n)
    (collect-stats 'a "0b000040010060" n)
    (collect-stats 'b "04824b00090000" n)
    (collect-stats 'b "08424940000060" n)
    (collect-stats 'b "0c424b40000020" n)
    (collect-stats 'b "04C24b40080000" n)
    (collect-stats 'b "08C24940000040" n)
    (collect-stats 'c "04400000080020" n)
    (collect-stats 'c "04C00100080000" n)
    (collect-stats 'c "0c400800000020" n)
    (collect-stats 'c "08400800000060" n)
    (collect-stats 'c "0cc00900000000" n)
    (collect-stats 'd "04809340090000" n)
    (collect-stats 'd "0c809b40010000" n)
    (collect-stats 'd "04009240090020" n)
    (collect-stats 'd "08C09B40000040" n)
    (collect-stats 'd "04c09340080000" n)
    (collect-stats 'e "068001000d0000" n)
    (collect-stats 'e "07c00300080000" n)
    (collect-stats 'e "060000000d0020" n)
    (collect-stats 'e "064000000c0020" n)
    (collect-stats 'e "048001000f0000" n)
    (collect-stats 'f "4C01A480000000" n)
    (collect-stats 'f "0c00a480400000" n)
    (collect-stats 'f "0c012480000400" n)
    (collect-stats 'f "4c012480000000" n)
    (collect-stats 'f "4401A480080000" n)
    (collect-stats 'g "04800348091002" n)
    (collect-stats 'g "04880348091000" n)
    (collect-stats 'g "00800348091042" n)
    (collect-stats 'g "00880348091040" n)
    (collect-stats 'g "04840349090002" n)
    (collect-stats 'h "04024b40080000" n)
    (collect-stats 'h "00024940080040" n)
    (collect-stats 'h "08024940000040" n)
    (collect-stats 'h "0c024b40000000" n)
    (collect-stats 'h "04004b40880000" n)
    (collect-stats 'i "08000480800000" n)
    (collect-stats 'i "08000480000800" n)
    (collect-stats 'i "28000480000000" n)
    (collect-stats 'i "08000400820000" n)
    (collect-stats 'i "08000400020800" n)
    (collect-stats 'j "08000490802000" n)
    (collect-stats 'j "08000490002800" n)
    (collect-stats 'j "28000490002000" n)
    (collect-stats 'j "08000492000802" n)
    (collect-stats 'j "08000492800002" n)
    (collect-stats 'k "00024900060010" n)
    (collect-stats 'k "01024940060000" n)
    (collect-stats 'k "06024900080010" n)
    (collect-stats 'k "02024900040010" n)
    (collect-stats 'k "03024940040000" n)
    (collect-stats 'l "80012480000000" n)
    (collect-stats 'l "80412480000000" n)
    (collect-stats 'l "00012480800000" n)
    (collect-stats 'l "00012480810000" n)
    (collect-stats 'l "80012480010000" n)
    (collect-stats 'm "00000fc00c0000" n)
    (collect-stats 'm "0c000fc0000000" n)
    (collect-stats 'm "0c000f40000000" n)
    (collect-stats 'm "00000dc0080040" n)
    (collect-stats 'm "000007c00c0000" n)
    (collect-stats 'n "04000b40080000" n)
    (collect-stats 'n "00000940080040" n)
    (collect-stats 'n "0c000b40000000" n)
    (collect-stats 'n "08000940000040" n)
    (collect-stats 'n "00000140080040" n)
    (collect-stats 'o "0cc00b40000000" n)
    (collect-stats 'o "04800300090000" n)
    (collect-stats 'o "08400840000060" n)
    (collect-stats 'o "00000000090060" n)
    (collect-stats 'o "00C00140080040" n)
    (collect-stats 'p "04800b24090000" n)
    (collect-stats 'p "04c00b64080000" n)
    (collect-stats 'p "0cc00b64000000" n)
    (collect-stats 'p "0C400B64000020" n)
    (collect-stats 'p "08400964000060" n)
    (collect-stats 'q "04800349090000" n)
    (collect-stats 'q "04800342095000" n)
    (collect-stats 'q "00800349090040" n)
    (collect-stats 'q "0c800b49010000" n)
    (collect-stats 'q "0cc00b49000000" n)
    (collect-stats 'r "04000B00080000" n)
    (collect-stats 'r "00000900080040" n)
    (collect-stats 'r "04000900080000" n)
    (collect-stats 'r "00000100080040" n)
    (collect-stats 'r "0c000900000000" n)
    (collect-stats 's "0fc00840000000" n)
    (collect-stats 's "07800000090000" n)
    (collect-stats 's "02c00000080050" n)
    (collect-stats 's "07C00040080000" n)
    (collect-stats 's "084000000000F0" n)
    (collect-stats 't "0c402480000000" n)
    (collect-stats 't "0c002480010000" n)
    (collect-stats 't "0c4024c0000000" n)
    (collect-stats 't "0C002480000000" n)
    (collect-stats 't "044024c0080000" n)
    (collect-stats 'u "00800b40010000" n)
    (collect-stats 'u "00000a40010020" n)
    (collect-stats 'u "00800340090000" n)
    (collect-stats 'u "00c00b40000000" n)
    (collect-stats 'u "00800640030000" n)
    (collect-stats 'v "00000A00010020" n)
    (collect-stats 'v "00000900060000" n)
    (collect-stats 'v "00000240000090" n)
    (collect-stats 'v "00000280010080" n)
    (collect-stats 'v "00000880040020" n)
    (collect-stats 'w "00000f80030000" n)
    (collect-stats 'w "00c00fc0000000" n)
    (collect-stats 'w "00c00bc0000000" n)
    (collect-stats 'w "00000EC0000030" n)
    (collect-stats 'w "00000F40020010" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'x "08400480060000" n)
    (collect-stats 'x "00000840060090" n)
    (collect-stats 'x "08400780060000" n)
    (collect-stats 'x "00400800060090" n)
    (collect-stats 'y "00880b4C011000" n)
    (collect-stats 'y "00800B48011002" n)
    (collect-stats 'y "00000a48011022" n)
    (collect-stats 'y "00080A4C011020" n)
    (collect-stats 'y "00400a48001022" n)
    (collect-stats 'z "0cc00000060000" n)
    (collect-stats 'z "0CC00840060000" n)
    (collect-stats 'z "0cc00040060000" n)
    (collect-stats 'z "0CC00800060000" n)
    (collect-stats 'z "04c000400e0000" n)))

(define run-no-train
  (lambda (n)
    (printf "Testing all PSYCH-NO-TRAIN~%")
    (collect-stats 'a "0F000240010020" n)
    (collect-stats 'a "048002400f0000" n)
    (collect-stats 'a "0FC00340000000" n)
    (collect-stats 'a "0e000240050020" n)
    (collect-stats 'a "04C002400E0000" n)
    (collect-stats 'a "0BC00140000040" n)
    (collect-stats 'a "00c000400a0050" n)
    (collect-stats 'a "0ac00140000050" n)
    (collect-stats 'b "0cc24b40000000" n)
    (collect-stats 'b "08024900010060" n)
    (collect-stats 'b "00824900090040" n)
    (collect-stats 'b "0c824b00010000" n)
    (collect-stats 'b "0c424A40000020" n)
    (collect-stats 'b "08424840000060" n)
    (collect-stats 'b "00024900090060" n)
    (collect-stats 'c "00400000080060" n)
    (collect-stats 'c "04800100090000" n)
    (collect-stats 'c "04000000090020" n)
    (collect-stats 'c "00c00100080040" n)
    (collect-stats 'c "0c000800010020" n)
    (collect-stats 'd "0cc09b40000000" n)
    (collect-stats 'd "04409240080020" n)
    (collect-stats 'd "08409a40000060" n)
    (collect-stats 'd "00409240080060" n)
    (collect-stats 'd "00009240090060" n)
    (collect-stats 'd "04809300090000" n)
    (collect-stats 'd "0c409a40000020" n)
    (collect-stats 'd "0c809b00010000" n)
    (collect-stats 'e "0b400800000060" n)
    (collect-stats 'e "0fc00b00000000" n)
    (collect-stats 'e "07400200080020" n)
    (collect-stats 'e "094008000000e0" n)
    (collect-stats 'e "06c001000c0000" n)
    (collect-stats 'e "0d400a000000a0" n)
    (collect-stats 'e "0bc00900000040" n)
    (collect-stats 'e "0e800900050000" n)
    (collect-stats 'e "0c800900070000" n)
    (collect-stats 'e "0cc00900060000" n)
    (collect-stats 'e "0c0008000500a0" n)
    (collect-stats 'f "44012480080000" n)
    (collect-stats 'f "08012480000440" n)
    (collect-stats 'f "04002480480000" n)
    (collect-stats 'f "0c002480400000" n)
    (collect-stats 'f "8c020480000600" n)
    (collect-stats 'f "0c000000880620" n)
    (collect-stats 'g "04440249080022" n)
    (collect-stats 'g "08400A48001062" n)
    (collect-stats 'g "08400848001062" n)
    (collect-stats 'g "00000248091062" n)
    (collect-stats 'g "0008024c091060" n)
    (collect-stats 'g "04c8034c081000" n)
    (collect-stats 'g "08440849000062" n)
    (collect-stats 'g "0c440a49000022" n)
    (collect-stats 'g "0c8c0b49010000" n)
    (collect-stats 'g "0ccc0b49000000" n)
    (collect-stats 'h "04024b00090000" n)
    (collect-stats 'h "08024840000060" n)
    (collect-stats 'h "08024D80000000" n)
    (collect-stats 'h "08024D00000010" n)
    (collect-stats 'i "28000400020000" n)
    (collect-stats 'i "04000480400000" n)    ; Wrong loc "08000900800000"
    (collect-stats 'i "04000480000400" n)    ;"08000900000800"
    (collect-stats 'i "14000480000000" n)    ;"28000900000000"
    (collect-stats 'i "00000480800000" n)
    (collect-stats 'i "00000480000800" n)
    (collect-stats 'i "00010480000000" n)
    (collect-stats 'i "00000480280000" n)
    (collect-stats 'i "00014480a80000" n)
    (collect-stats 'i "20004480000000" n)
    (collect-stats 'j "28000492000002" n)
    (collect-stats 'j "08080492800000" n)
    (collect-stats 'j "08080492000800" n)
    (collect-stats 'j "14040249000000" n)
    (collect-stats 'j "00010492000002" n)
    (collect-stats 'j "00000492000802" n)
    (collect-stats 'j "00000492800002" n)
    (collect-stats 'j "00000490282000" n)
    (collect-stats 'j "04000248001402" n)
    (collect-stats 'j "04000248401002" n)
    (collect-stats 'j "14000248001002" n)
    (collect-stats 'j "00020490882000" n)
    (collect-stats 'j "a8090492000000" n)
    (collect-stats 'j "00014490a82000" n)
    (collect-stats 'j "60000494c02000" n)
    (collect-stats 'j "04000490402000" n)
    (collect-stats 'j "20000492800002" n)  ; LOC WRONG "08000092200002"
    (collect-stats 'j "00000048201040" n)
    (collect-stats 'k "0c024900000090" n)
    (collect-stats 'k "07024900090000" n)
    (collect-stats 'k "080249000000D0" n)
    (collect-stats 'k "04004100880090" n)    ; crossing quanta too hard
    (collect-stats 'k "00024900040090" n)
    (collect-stats 'k "00024D00020050" n)
    (collect-stats 'k "02424980040000" n)
    (collect-stats 'k "07024D40000000" n)
    (collect-stats 'l "00012480000000" n)
    (collect-stats 'l "40012480000000" n)
    (collect-stats 'l "00012400000010" n)
    (collect-stats 'l "00012480010000" n)
    (collect-stats 'l "00412480000000" n)
    (collect-stats 'm "000005c0080040" n)
    (collect-stats 'm "080007000d0000" n)
    (collect-stats 'm "000007000D0000" n)
    (collect-stats 'm "00000bc0040080" n)
    (collect-stats 'm "000001c00800c0" n)
    (collect-stats 'm "040003c0080080" n)
    (collect-stats 'm "040007c0080000" n)
    (collect-stats 'm "08000dc0000040" n)
    (collect-stats 'm "00000d400000c0" n)
    (collect-stats 'm "000007400C0000" n)
    (collect-stats 'm "010009C0000080" n)
    (collect-stats 'm "020003C0040000" n)
    (collect-stats 'm "08000d40000040" n)
    (collect-stats 'm "0c000e40000020" n)
    (collect-stats 'n "04000340080000" n)
    (collect-stats 'n "08000900010040" n)
    (collect-stats 'n "04000340080080" n)
    (collect-stats 'n "0c000340080000" n)
    (collect-stats 'n "08000d80000000" n)
    (collect-stats 'n "08000D00000010" n)
    (collect-stats 'o "0c000a00010020" n)
    (collect-stats 'o "04c00340080000" n)
    (collect-stats 'o "04400240080020" n)
    (collect-stats 'o "08800900010040" n)
    (collect-stats 'o "0c400a40000020" n)
    (collect-stats 'o "0C000900060000" n)
    (collect-stats 'o "0c000240000090" n)
    (collect-stats 'o "00c00900000090" n)
    (collect-stats 'o "00C00240060000" n)
    (collect-stats 'p "00400964080060" n)
    (collect-stats 'p "08c00964000040" n)
    (collect-stats 'p "00800924090040" n)
    (collect-stats 'p "0c800b24010000" n)
    (collect-stats 'p "04800324090000" n)
    (collect-stats 'p "00000924090060" n)
    (collect-stats 'p "08000924010060" n)
    (collect-stats 'p "0c000b24010020" n)
    (collect-stats 'p "00c00364060000" n)
    (collect-stats 'p "088000000320c8" n)
    (collect-stats 'p "00c00264060000" n)
    (collect-stats 'p "00800324070000" n)
    (collect-stats 'p "00800224070000" n)
    (collect-stats 'p "09400d64000020" n)
    (collect-stats 'p "02800524010040" n)
    (collect-stats 'p "0d800ba4000000" n)
    (collect-stats 'p "00800124090040" n)
    (collect-stats 'p "0C000B64000090" n)
    (collect-stats 'p "04800b20090002" n)
    (collect-stats 'q "04400249080020" n)
    (collect-stats 'q "08C00B49000040" n)
    (collect-stats 'q "00840348091040" n)
    (collect-stats 'q "00440248081060" n)
    (collect-stats 'q "0c400a49000020" n)
    (collect-stats 'q "04c00349080000" n)
    (collect-stats 'q "00000249090060" n)
    (collect-stats 'q "08400849000060" n)
    (collect-stats 'q "04800642035000" n)
    (collect-stats 'q "02840548011040" n)
    (collect-stats 'q "00840248071000" n)
    (collect-stats 'q "0C000B49060000" n)
    (collect-stats 'q "04c00649020000" n)
    (collect-stats 'q "04800309090010" n)
    (collect-stats 'q "064402c8081000" n)
    (collect-stats 'q "00800249070000" n)
    (collect-stats 'q "00c00249060000" n)
    (collect-stats 'q "08c80940006040" n)
    (collect-stats 'q "0e400ac9000000" n)
    (collect-stats 'r "08000900000040" n)
    (collect-stats 'r "04000300080000" n)
    (collect-stats 'r "04000100080000" n)
    (collect-stats 'r "040009000C0000" n)
    (collect-stats 'r "01000900080040" n)
    (collect-stats 'r "04000A00080020" n)
    (collect-stats 'r "040001000c0000" n)
    (collect-stats 'r "04000080080080" n)
    (collect-stats 'r "0c000900040000" n)
    (collect-stats 's "0ec00800000010" n)
    (collect-stats 's "07400040080000" n)
    (collect-stats 's "0ac00800000050" n)
    (collect-stats 's "06c00000080010" n)
    (collect-stats 's "0D800000010080" n)
    (collect-stats 's "0d0000000100a0" n)
    (collect-stats 's "0B800800010000" n)
    (collect-stats 's "0AC00800000010" n)
    (collect-stats 's "00400400000070" n)
    (collect-stats 's "08c000000000d0" n)
    (collect-stats 's "01c00040040000" n)
    (collect-stats 't "04002480090000" n)
    (collect-stats 't "0c002400000010" n)
    (collect-stats 't "04002480080000" n)
    (collect-stats 't "0c012480000000" n)
    (collect-stats 't "0C802400030000" n)
    (collect-stats 't "0c802400020000" n)
    (collect-stats 't "04400800200220" n)    
    (collect-stats 'u "00800940010040" n)
    (collect-stats 'u "00000840010060" n)
    (collect-stats 'u "00800240030080" n)
    (collect-stats 'u "00800B00010000" n)
    (collect-stats 'u "00400a40000020" n)
    (collect-stats 'u "000006c0010000" n)   ;  shifted rt "00000d80020000"
    (collect-stats 'u "00c00340080000" n)
    (collect-stats 'u "00400240080020" n)
    (collect-stats 'u "01800bc0000000" n)
    (collect-stats 'u "00c00640020000" n)
    (collect-stats 'v "00000200090020" n)
    (collect-stats 'v "00000800010060" n)
    (collect-stats 'v "000000800c0020" n)
    (collect-stats 'v "000000800100C0" n)
    (collect-stats 'v "02000280090000" n)
    (collect-stats 'v "01000880000060" n)
    (collect-stats 'v "000000400000D0" n)
    (collect-stats 'v "000001000e0000" n)
    (collect-stats 'v "02000600010020" n)
    (collect-stats 'v "01000C00010020" n)
    (collect-stats 'w "00000b40020010" n)
    (collect-stats 'w "000008c0000070" n)
    (collect-stats 'w "000003800b0000" n)
    (collect-stats 'w "00000ac0000030" n)
    (collect-stats 'w "00000B80030000" n)
    (collect-stats 'w "00400fC0020000" n)
    (collect-stats 'w "00000e80010020" n)
    (collect-stats 'w "00000a80010020" n)
    (collect-stats 'w "00400ec0000020" n)
    (collect-stats 'w "00800f80010000" n)
    (collect-stats 'w "00400ac0000020" n)
    (collect-stats 'w "00800B80010000" n)
    (collect-stats 'w "00C009C0000040" n)
    (collect-stats 'w "00C003C0080000" n)
    (collect-stats 'w "008003000b0000" n)
    (collect-stats 'w "00800fC0000010" n)
    (collect-stats 'x "000004400e0010" n)
    (collect-stats 'x "04000800060090" n)
    (collect-stats 'x "04800840060090" n)
    (collect-stats 'x "04800480000090" n)
    (collect-stats 'x "09000440060000" n)
    (collect-stats 'x "004004000e0010" n)
    (collect-stats 'x "000006000e0010" n)
    (collect-stats 'x "08000040060040" n)
    (collect-stats 'y "00480A4c001020" n)
    (collect-stats 'y "00080a48011020" n)
    (collect-stats 'y "00880B48011000" n)
    (collect-stats 'y "00cc0b49000000" n)
    (collect-stats 'y "00C00B48001002" n)
    (collect-stats 'y "00C80b4c001000" n)
    (collect-stats 'y "00880b48013000" n)
    (collect-stats 'y "004402C9000082" n)
    (collect-stats 'y "008806480b3000" n)
    (collect-stats 'y "004802C8003080" n)
    (collect-stats 'y "00880b08011010" n)
    (collect-stats 'y "00000A64016020" n)
    (collect-stats 'y "0208064c011020" n)
    (collect-stats 'y "00040249000092" n)
    (collect-stats 'y "00800348091002" n)
    (collect-stats 'y "00000864016020" n)
    (collect-stats 'z "048000000f0000" n)
    (collect-stats 'z "0C800800070000" n)
    (collect-stats 'z "04c000000e0000" n)
    (collect-stats 'z "04800000070000" n)
    (collect-stats 'z "08c00000060040" n)))

(define run-normals
  (lambda (n)
    (printf "Testing all NORMALS~%")
    (normal-a n)
    (normal-b n)
    (normal-c n)
    (normal-d n)
    (normal-e n)
    (normal-f n)
    (normal-g n)
    (normal-h n)
    (normal-i n)
    (normal-j n)
    (normal-k n)
    (normal-l n)
    (normal-m n)
    (normal-n n)
    (normal-o n)
    (normal-p n)
    (normal-q n)
    (normal-r n)
    (normal-s n)
    (normal-t n)
    (normal-u n)
    (normal-v n)
    (normal-w n)
    (normal-x n)
    (normal-y n)
    (normal-z n)))

(define test-ae
  (lambda (n file)
    (transcript-on file)
    (printf "Testing a-e NORMALS~%")
    (normal-a n)
    (normal-b n)
    (normal-c n)
    (normal-d n)
    (normal-e n)
    (date-and-time)
    (transcript-off)))

(define test-fj
  (lambda (n file)
    (transcript-on file)
    (printf "Testing f-j NORMALS~%")
    (normal-f n)
    (normal-g n)
    (normal-h n)
    (normal-i n)
    (normal-j n)
    (date-and-time)
    (transcript-off)))

(define test-ko
  (lambda (n file)
    (transcript-on file)
    (printf "Testing k-o NORMALS~%")
    (normal-k n)
    (normal-l n)
    (normal-m n)
    (normal-n n)
    (normal-o n)
    (date-and-time)
    (transcript-off)))

(define test-pt
  (lambda (n file)
    (transcript-on file)
    (printf "Testing p-t NORMALS~%")
    (normal-p n)
    (normal-q n)
    (normal-r n)
    (normal-s n)
    (normal-t n)
    (date-and-time)
    (transcript-off)))

(define test-uz
  (lambda (n file)
    (transcript-on file)
    (printf "Testing u-z NORMALS~%")
    (normal-u n)
    (normal-v n)
    (normal-w n)
    (normal-x n)
    (normal-y n)
    (normal-z n)
    (date-and-time)
    (transcript-off)))

(define normal-a
  (lambda (n)
    ; (printf "Testing NORMALS a~%")
    ; (printf "1~%")
    (collect-stats 'a "058002400b0000" n)
    ; (printf "2~%")
    (collect-stats 'a "0B800140010040" n)
    ; (printf "3~%")
    (collect-stats 'a "09800040030040" n)
    ; (printf "4~%")
    (collect-stats 'a "0f800340010000" n)
    ; (printf "5~%")
    (collect-stats 'a "0b000040010060" n)
    ; (printf "6~%")
    (collect-stats 'a "0F000240010020" n)
    ; (printf "7~%")
    (collect-stats 'a "048002400f0000" n)
    ; (printf "8~%")
    (collect-stats 'a "0FC00340000000" n)
    ; (printf "9~%")
    (collect-stats 'a "0e000240050020" n)
    ; (printf "10~%")
    (collect-stats 'a "04C002400E0000" n)
    ; (printf "11~%")
    (collect-stats 'a "0BC00140000040" n)
    ; (printf "12~%")
    (collect-stats 'a "00c000400a0050" n)
    ; (printf "13~%")
    (collect-stats 'a "0ac00140000050" n)
    ))

(define normal-b
  (lambda (n)
    ; (printf "Testing NORMALS b~%")
    ; (printf "1~%")
    (collect-stats 'b "04824b00090000" n)
    ; (printf "2~%")
    (collect-stats 'b "08424940000060" n)
    ; (printf "3~%")
    (collect-stats 'b "0c424b40000020" n)
    ; (printf "4~%")
    (collect-stats 'b "04C24b40080000" n)
    ; (printf "5~%")
    (collect-stats 'b "08C24940000040" n)
    ; (printf "6~%")
    (collect-stats 'b "0cc24b40000000" n)
    ; (printf "7~%")
    (collect-stats 'b "08024900010060" n)
    ; (printf "8~%")
    (collect-stats 'b "00824900090040" n)
    ; (printf "9~%")
    (collect-stats 'b "0c824b00010000" n)
    ; (printf "10~%")
    (collect-stats 'b "0c424A40000020" n)
    ; (printf "11~%")
    (collect-stats 'b "08424840000060" n)
    ; (printf "12~%")
    (collect-stats 'b "00024900090060" n)
    ))

(define normal-c
  (lambda (n)
    ; (printf "Testing NORMALS c~%")
    ; (printf "1~%")
    (collect-stats 'c "04400000080020" n)
    ; (printf "2~%")
    (collect-stats 'c "04C00100080000" n)
    ; (printf "3~%")
    (collect-stats 'c "0c400800000020" n)
    ; (printf "4~%")
    (collect-stats 'c "08400800000060" n)
    ; (printf "5~%")
    (collect-stats 'c "0cc00900000000" n)
    ; (printf "6~%")
    (collect-stats 'c "00400000080060" n)
    ; (printf "7~%")
    (collect-stats 'c "04800100090000" n)
    ; (printf "8~%")
    (collect-stats 'c "04000000090020" n)
    ; (printf "9~%")
    (collect-stats 'c "00c00100080040" n)
    ; (printf "10~%")
    (collect-stats 'c "0c000800010020" n)))

(define normal-d
  (lambda (n)
    ; (printf "Testing NORMALS d~%")
    ; (printf "1~%")
    (collect-stats 'd "04809340090000" n)
    ; (printf "2~%")
    (collect-stats 'd "0c809b40010000" n)
    ; (printf "3~%")
    (collect-stats 'd "04009240090020" n)
    ; (printf "4~%")
    (collect-stats 'd "08C09B40000040" n)
    ; (printf "5~%")
    (collect-stats 'd "04c09340080000" n)
    ; (printf "6~%")
    (collect-stats 'd "0cc09b40000000" n)
    ; (printf "7~%")
    (collect-stats 'd "04409240080020" n)
    ; (printf "8~%")
    (collect-stats 'd "08409a40000060" n)
    ; (printf "9~%")
    (collect-stats 'd "00409240080060" n)
    ; (printf "10~%")
    (collect-stats 'd "00009240090060" n)
    ; (printf "11~%")
    (collect-stats 'd "04809300090000" n)
    ; (printf "12~%")
    (collect-stats 'd "0c409a40000020" n)
    ; (printf "13~%")
    (collect-stats 'd "0c809b00010000" n)))

(define normal-e
  (lambda (n)
    ; (printf "Testing NORMALS e~%")
    ; (printf "1~%")
    (collect-stats 'e "068001000d0000" n)
    ; (printf "2~%")
    (collect-stats 'e "07c00300080000" n)
    ; (printf "3~%")
    (collect-stats 'e "060000000d0020" n)
    ; (printf "4~%")
    (collect-stats 'e "064000000c0020" n)
    ; (printf "5~%")
    (collect-stats 'e "048001000f0000" n)
    ; (printf "6~%")
    (collect-stats 'e "0b400800000060" n)
    ; (printf "7~%")
    (collect-stats 'e "0fc00b00000000" n)
    ; (printf "8~%")
    (collect-stats 'e "07400200080020" n)
    ; (printf "9~%")
    (collect-stats 'e "094008000000e0" n)
    ; (printf "10~%")
    (collect-stats 'e "06c001000c0000" n)
    ; (printf "11~%")
    (collect-stats 'e "0d400a000000a0" n)
    ; (printf "12~%")
    (collect-stats 'e "0bc00900000040" n)
    ; (printf "13~%")
    (collect-stats 'e "0e800900050000" n)
    ; (printf "14~%")
    (collect-stats 'e "0c800900070000" n)
    ; (printf "15~%")
    (collect-stats 'e "0cc00900060000" n)
    ; (printf "16~%")
    (collect-stats 'e "0c0008000500a0" n)))

(define normal-f
  (lambda (n)
    ; (printf "Testing NORMALS f~%")
    ; (printf "1~%")
    (collect-stats 'f "4C01A480000000" n)
    ; (printf "2~%")
    (collect-stats 'f "0c00a480400000" n)
    ; (printf "3~%")
    (collect-stats 'f "0c012480000400" n)
    ; (printf "4~%")
    (collect-stats 'f "4c012480000000" n)
    ; (printf "5~%")
    (collect-stats 'f "4401A480080000" n)
    ; (printf "6~%")
    (collect-stats 'f "44012480080000" n)
    ; (printf "7~%")
    (collect-stats 'f "08012480000440" n)
    ; (printf "8~%")
    (collect-stats 'f "04002480480000" n)
    ; (printf "9~%")
    (collect-stats 'f "0c002480400000" n)
    ; (printf "10~%")
    (collect-stats 'f "8c020480000600" n)
    ; (printf "11~%")
    (collect-stats 'f "0c000000880620" n)))

(define normal-g
  (lambda (n)
    ; (printf "Testing NORMALS g~%")
    ; (printf "1~%")
    (collect-stats 'g "04800348091002" n)
    ; (printf "2~%")
    (collect-stats 'g "04880348091000" n)
    ; (printf "3~%")
    (collect-stats 'g "00800348091042" n)
    ; (printf "4~%")
    (collect-stats 'g "00880348091040" n)
    ; (printf "5~%")
    (collect-stats 'g "04840349090002" n)
    ; (printf "6~%")
    (collect-stats 'g "04440249080022" n)
    ; (printf "7~%")
    (collect-stats 'g "08400A48001062" n)
    ; (printf "8~%")
    (collect-stats 'g "08400848001062" n)
    ; (printf "9~%")
    (collect-stats 'g "00000248091062" n)
    ; (printf "10~%")
    (collect-stats 'g "0008024c091060" n)
    ; (printf "11~%")
    (collect-stats 'g "04c8034c081000" n)
    ; (printf "12~%")
    (collect-stats 'g "08440849000062" n)
    ; (printf "13~%")
    (collect-stats 'g "0c440a49000022" n)
    ; (printf "14~%")
    (collect-stats 'g "0c8c0b49010000" n)
    ; (printf "15~%")
    (collect-stats 'g "0ccc0b49000000" n)))

(define normal-h
  (lambda (n)
    ; (printf "Testing NORMALS h~%")
    ; (printf "1~%")
    (collect-stats 'h "04024b40080000" n)
    ; (printf "2~%")
    (collect-stats 'h "00024940080040" n)
    ; (printf "3~%")
    (collect-stats 'h "08024940000040" n)
    ; (printf "4~%")
    (collect-stats 'h "0c024b40000000" n)
    ; (printf "5~%")
    (collect-stats 'h "04004b40880000" n)
    ; (printf "6~%")
    (collect-stats 'h "04024b00090000" n)
    ; (printf "7~%")
    (collect-stats 'h "08024840000060" n)
    ; (printf "8~%")
    (collect-stats 'h "08024D80000000" n)
    ; (printf "9~%")
    (collect-stats 'h "08024D00000010" n)))

(define normal-i
  (lambda (n)
    ; (printf "Testing NORMALS i~%")
    ; (printf "1~%")
    (collect-stats 'i "08000480800000" n)
    ; (printf "2~%")
    (collect-stats 'i "08000480000800" n)
    ; (printf "3~%")
    (collect-stats 'i "28000480000000" n)
    ; (printf "4~%")
    (collect-stats 'i "08000400820000" n)
    ; (printf "5~%")
    (collect-stats 'i "08000400020800" n)
    ; (printf "6~%")
    (collect-stats 'i "28000400020000" n)
    ; (printf "7~%")
    (collect-stats 'i "04000480400000" n)    ; Wrong loc "08000900800000"
    ; (printf "8~%")
    (collect-stats 'i "04000480000400" n)    ;"08000900000800"
    ; (printf "9~%")
    (collect-stats 'i "14000480000000" n)    ;"28000900000000"
    ; (printf "10~%")
    (collect-stats 'i "00000480800000" n)
    ; (printf "11~%")
    (collect-stats 'i "00000480000800" n)
    ; (printf "12~%")
    (collect-stats 'i "00010480000000" n)
    ; (printf "13~%")
    (collect-stats 'i "00000480280000" n)
    ; (printf "14~%")
    (collect-stats 'i "00014480a80000" n)
    ; (printf "15~%")
    (collect-stats 'i "20004480000000" n)))

(define normal-j
  (lambda (n)
    ; (printf "Testing NORMALS j~%")
    ; (printf "1~%")
    (collect-stats 'j "08000490802000" n)
    ; (printf "2~%")
    (collect-stats 'j "08000490002800" n)
    ; (printf "3~%")
    (collect-stats 'j "28000490002000" n)
    ; (printf "4~%")
    (collect-stats 'j "08000492000802" n)
    ; (printf "5~%")
    (collect-stats 'j "08000492800002" n)
    ; (printf "6~%")
    (collect-stats 'j "28000492000002" n)
    ; (printf "7~%")
    (collect-stats 'j "08080492800000" n)
    ; (printf "8~%")
    (collect-stats 'j "08080492000800" n)
    ; (printf "9~%")
    (collect-stats 'j "14040249000000" n)
    ; (printf "10~%")
    (collect-stats 'j "00010492000002" n)
    ; (printf "11~%")
    (collect-stats 'j "00000492000802" n)
    ; (printf "12~%")
    (collect-stats 'j "00000492800002" n)
    ; (printf "13~%")
    (collect-stats 'j "00000490282000" n)
    ; (printf "14~%")
    (collect-stats 'j "04000248001402" n)
    ; (printf "15~%")
    (collect-stats 'j "04000248401002" n)
    ; (printf "16~%")
    (collect-stats 'j "14000248001002" n)
    ; (printf "17~%")
    (collect-stats 'j "00020490882000" n)
    ; (printf "18~%")
    (collect-stats 'j "a8090492000000" n)
    ; (printf "19~%")
    (collect-stats 'j "00014490a82000" n)
    ; (printf "20~%")
    (collect-stats 'j "60000494c02000" n)
    ; (printf "21~%")
    (collect-stats 'j "04000490402000" n)
    ; (printf "22~%")
    (collect-stats 'j "20000492800002" n)  ; LOC WRONG "08000092200002"
    ; (printf "23~%")
    (collect-stats 'j "00000048201040" n)))

(define normal-k
  (lambda (n)
    ; (printf "1~%")
    (collect-stats 'k "00024900060010" n)
    ; (printf "2~%")
    (collect-stats 'k "01024940060000" n)
    ; (printf "3~%")
    (collect-stats 'k "06024900080010" n)
    ; (printf "4~%")
    (collect-stats 'k "02024900040010" n)
    ; (printf "5~%")
    (collect-stats 'k "03024940040000" n)
    ; (printf "6~%")
    (collect-stats 'k "0c024900000090" n)
    ; (printf "7~%")
    (collect-stats 'k "07024900090000" n)
    ; (printf "8~%")
    (collect-stats 'k "080249000000D0" n)
;;    ; (printf "9~%")                           ; drop this one
    (collect-stats 'k "04004100880090" n)    ; crossing quanta too hard
    ; (printf "10~%")
    (collect-stats 'k "00024900040090" n)
    ; (printf "11~%")
    (collect-stats 'k "00024D00020050" n)
    ; (printf "12~%")
    (collect-stats 'k "02424980040000" n)
    ; (printf "13~%")
    (collect-stats 'k "07024D40000000" n)))

(define normal-l
  (lambda (n)
    ; (printf "Testing NORMALS l~%")
    ; (printf "1~%")
    (collect-stats 'l "80012480000000" n)
    ; (printf "2~%")
    (collect-stats 'l "80412480000000" n)
    ; (printf "3~%")
    (collect-stats 'l "00012480800000" n)
    ; (printf "4~%")
    (collect-stats 'l "00012480810000" n)
    ; (printf "5~%")
    (collect-stats 'l "80012480010000" n)
    ; (printf "6~%")
    (collect-stats 'l "00012480000000" n)
    ; (printf "7~%")
    (collect-stats 'l "40012480000000" n)
    ; (printf "8~%")
    (collect-stats 'l "00012400000010" n)
    ; (printf "9~%")
    (collect-stats 'l "00012480010000" n)
    ; (printf "10~%")
    (collect-stats 'l "00412480000000" n)))

(define normal-m
  (lambda (n)
    ; (printf "Testing NORMALS m~%")
    ; (printf "1~%")
    (collect-stats 'm "00000fc00c0000" n)
    ; (printf "2~%")
    (collect-stats 'm "0c000fc0000000" n)
    ; (printf "3~%")
    (collect-stats 'm "0c000f40000000" n)
    ; (printf "4~%")
    (collect-stats 'm "00000dc0080040" n)
    ; (printf "5~%")
    (collect-stats 'm "000007c00c0000" n)
    ; (printf "6~%")
    (collect-stats 'm "000005c0080040" n)
    ; (printf "7~%")
    (collect-stats 'm "080007000d0000" n)
    ; (printf "8~%")
    (collect-stats 'm "000007000D0000" n)
    ; (printf "9~%")
    (collect-stats 'm "00000bc0040080" n)
    ; (printf "10~%")
    (collect-stats 'm "000001c00800c0" n)
    ; (printf "11~%")
    (collect-stats 'm "040003c0080080" n)
    ; (printf "12~%")
    (collect-stats 'm "040007c0080000" n)
    ; (printf "13~%")
    (collect-stats 'm "08000dc0000040" n)
    ; (printf "14~%")
    (collect-stats 'm "00000d400000c0" n)
    ; (printf "15~%")
    (collect-stats 'm "000007400C0000" n)
    ; (printf "16~%")
    (collect-stats 'm "010009C0000080" n)
    ; (printf "17~%")
    (collect-stats 'm "020003C0040000" n)
    ; (printf "18~%")
    (collect-stats 'm "08000d40000040" n)
    ; (printf "19~%")
    (collect-stats 'm "0c000e40000020" n)))

(define normal-n
  (lambda (n)
    ; (printf "Testing NORMALS n~%")
    ; (printf "1~%")
    (collect-stats 'n "04000b40080000" n)
    ; (printf "2~%")
    (collect-stats 'n "00000940080040" n)
    ; (printf "3~%")
    (collect-stats 'n "0c000b40000000" n)
    ; (printf "4~%")
    (collect-stats 'n "08000940000040" n)
    ; (printf "5~%")
    (collect-stats 'n "00000140080040" n)
    ; (printf "6~%")
    (collect-stats 'n "04000340080000" n)
    ; (printf "7~%")
    (collect-stats 'n "08000900010040" n)
    ; (printf "8~%")
    (collect-stats 'n "04000340080080" n)
    ; (printf "9~%")
    (collect-stats 'n "0c000340080000" n)
    ; (printf "10~%")
    (collect-stats 'n "08000d80000000" n)
    ; (printf "11~%")
    (collect-stats 'n "08000D00000010" n)))

(define normal-o
  (lambda (n)
    ; (printf "Testing NORMALS o~%")
    ; (printf "1~%")
    (collect-stats 'o "0cc00b40000000" n)
    ; (printf "2~%")
    (collect-stats 'o "04800300090000" n)
    ; (printf "3~%")
    (collect-stats 'o "08400840000060" n)
    ; (printf "4~%")
    (collect-stats 'o "00000000090060" n)
    ; (printf "5~%")
    (collect-stats 'o "00C00140080040" n)
    ; (printf "6~%")
    (collect-stats 'o "0c000a00010020" n)
    ; (printf "7~%")
    (collect-stats 'o "04c00340080000" n)
    ; (printf "8~%")
    (collect-stats 'o "04400240080020" n)
    ; (printf "9~%")
    (collect-stats 'o "08800900010040" n)
    ; (printf "10~%")
    (collect-stats 'o "0c400a40000020" n)
    ; (printf "11~%")
    (collect-stats 'o "0C000900060000" n)
    ; (printf "12~%")
    (collect-stats 'o "0c000240000090" n)
    ; (printf "13~%")
    (collect-stats 'o "00c00900000090" n)
    ; (printf "14~%")
    (collect-stats 'o "00C00240060000" n)))

(define normal-p
  (lambda (n)
    ; (printf "Testing NORMALS p~%")
    ; (printf "1~%")
    (collect-stats 'p "04800b24090000" n)
    ; (printf "2~%")
    (collect-stats 'p "04c00b64080000" n)
    ; (printf "3~%")
    (collect-stats 'p "0cc00b64000000" n)
    ; (printf "4~%")
    (collect-stats 'p "0C400B64000020" n)
    ; (printf "5~%")
    (collect-stats 'p "08400964000060" n)
    ; (printf "6~%")
    (collect-stats 'p "00400964080060" n)
    ; (printf "7~%")
    (collect-stats 'p "08c00964000040" n)
    ; (printf "8~%")
    (collect-stats 'p "00800924090040" n)
    ; (printf "9~%")
    (collect-stats 'p "0c800b24010000" n)
    ; (printf "10~%")
    (collect-stats 'p "04800324090000" n)
    ; (printf "11~%")
    (collect-stats 'p "00000924090060" n)
    ; (printf "12~%")
    (collect-stats 'p "08000924010060" n)
    ; (printf "13~%")
    (collect-stats 'p "0c000b24010020" n)
    ; (printf "14~%")
    (collect-stats 'p "00c00364060000" n)
    ; (printf "15~%")
    (collect-stats 'p "088000000320c8" n)
    ; (printf "16~%")
    (collect-stats 'p "00c00264060000" n)
    ; (printf "17~%")
    (collect-stats 'p "00800324070000" n)
    ; (printf "18~%")
    (collect-stats 'p "00800224070000" n)
    ; (printf "19~%")
    (collect-stats 'p "09400d64000020" n)
    ; (printf "20~%")
    (collect-stats 'p "02800524010040" n)
    ; (printf "21~%")
    (collect-stats 'p "0d800ba4000000" n)
    ; (printf "22~%")
    (collect-stats 'p "00800124090040" n)
    ; (printf "23~%")
    (collect-stats 'p "0C000B64000090" n)
    ; (printf "24~%")
    (collect-stats 'p "04800b20090002" n)))

(define normal-q
  (lambda (n)
    ; (printf "Testing NORMALS q~%")
    ; (printf "1~%")
    (collect-stats 'q "04800349090000" n)
    ; (printf "2~%")
    (collect-stats 'q "04800342095000" n)
    ; (printf "3~%")
    (collect-stats 'q "00800349090040" n)
    ; (printf "4~%")
    (collect-stats 'q "0c800b49010000" n)
    ; (printf "5~%")
    (collect-stats 'q "0cc00b49000000" n)
    ; (printf "6~%")
    (collect-stats 'q "04400249080020" n)
    ; (printf "7~%")
    (collect-stats 'q "08C00B49000040" n)
    ; (printf "8~%")
    (collect-stats 'q "00840348091040" n)
    ; (printf "9~%")
    (collect-stats 'q "00440248081060" n)
    ; (printf "10~%")
    (collect-stats 'q "0c400a49000020" n)
    ; (printf "11~%")
    (collect-stats 'q "04c00349080000" n)
    ; (printf "12~%")
    (collect-stats 'q "00000249090060" n)
    ; (printf "13~%")
    (collect-stats 'q "08400849000060" n)
    ; (printf "14~%")
    (collect-stats 'q "04800642035000" n)
    ; (printf "15~%")
    (collect-stats 'q "02840548011040" n)
    ; (printf "16~%")
    (collect-stats 'q "00840248071000" n)
    ; (printf "17~%")
    (collect-stats 'q "0C000B49060000" n)
    ; (printf "18~%")
    (collect-stats 'q "04c00649020000" n)
    ; (printf "19~%")
    (collect-stats 'q "04800309090010" n)
    ; (printf "20~%")
    (collect-stats 'q "064402c8081000" n)
    ; (printf "21~%")
    (collect-stats 'q "00800249070000" n)
    ; (printf "22~%")
    (collect-stats 'q "00c00249060000" n)
    ; (printf "23~%")
    (collect-stats 'q "08c80940006040" n)
    ; (printf "24~%")
    (collect-stats 'q "0e400ac9000000" n)))

(define normal-r
  (lambda (n)
    ; (printf "Testing NORMALS r~%")
    ; (printf "1~%")
    (collect-stats 'r "04000B00080000" n)
    ; (printf "2~%")
    (collect-stats 'r "00000900080040" n)
    ; (printf "3~%")
    (collect-stats 'r "04000900080000" n)
    ; (printf "4~%")
    (collect-stats 'r "00000100080040" n)
    ; (printf "5~%")
    (collect-stats 'r "0c000900000000" n)
    ; (printf "6~%")
    (collect-stats 'r "08000900000040" n)
    ; (printf "7~%")
    (collect-stats 'r "04000300080000" n)
    ; (printf "8~%")
    (collect-stats 'r "04000100080000" n)
    ; (printf "9~%")
    (collect-stats 'r "040009000C0000" n)
    ; (printf "10~%")
    (collect-stats 'r "01000900080040" n)
    ; (printf "11~%")
    (collect-stats 'r "04000A00080020" n)
    ; (printf "12~%")
    (collect-stats 'r "040001000c0000" n)
    ; (printf "13~%")
    (collect-stats 'r "04000080080080" n)
    ; (printf "14~%")
    (collect-stats 'r "0c000900040000" n)))

(define normal-s
  (lambda (n)
    ; (printf "1~%")
    (collect-stats 's "0fc00840000000" n)
    ; (printf "2~%")
    (collect-stats 's "07800000090000" n)
    ; (printf "3~%")
    (collect-stats 's "02c00000080050" n)
    ; (printf "4~%")
    (collect-stats 's "07C00040080000" n)
    ; (printf "5~%")
    (collect-stats 's "084000000000F0" n)
    ; (printf "6~%")
    (collect-stats 's "0ec00800000010" n)
    ; (printf "7~%")
    (collect-stats 's "07400040080000" n)
    ; (printf "8~%")
    (collect-stats 's "0ac00800000050" n)
    ; (printf "9~%")
    (collect-stats 's "06c00000080010" n)
    ; (printf "10~%")
    (collect-stats 's "0D800000010080" n)
    ; (printf "11~%")
    (collect-stats 's "0d0000000100a0" n)
    ; (printf "12~%")
    (collect-stats 's "0B800800010000" n)
    ; (printf "13~%")
    (collect-stats 's "0AC00800000010" n)
    ; (printf "14~%")
    (collect-stats 's "00400400000070" n)
    ; (printf "15~%")
    (collect-stats 's "08c000000000d0" n)
    ; (printf "16~%")
    (collect-stats 's "01c00040040000" n)))

(define normal-t
  (lambda (n)
    ; (printf "Testing NORMALS t~%")
    ; (printf "1~%")
    (collect-stats 't "0c402480000000" n)
    ; (printf "2~%")
    (collect-stats 't "0c002480010000" n)
    ; (printf "3~%")
    (collect-stats 't "0c4024c0000000" n)
    ; (printf "4~%")
    (collect-stats 't "0C002480000000" n)
    ; (printf "5~%")
    (collect-stats 't "044024c0080000" n)
    ; (printf "6~%")
    (collect-stats 't "04002480090000" n)
    ; (printf "7~%")
    (collect-stats 't "0c002400000010" n)
    ; (printf "8~%")
    (collect-stats 't "04002480080000" n)
    ; (printf "9~%")
    (collect-stats 't "0c012480000000" n)
    ; (printf "10~%")
    (collect-stats 't "0C802400030000" n)
    ; (printf "11~%")
    (collect-stats 't "0c802400020000" n)
    ; (printf "12~%")
    (collect-stats 't "04400800200220" n)))

    

(define normal-u
  (lambda (n)
    ; (printf "Testing NORMALS u~%")
    ; (printf "1~%")
    (collect-stats 'u "00800b40010000" n)
    ; (printf "2~%")
    (collect-stats 'u "00000a40010020" n)
    ; (printf "3~%")
    (collect-stats 'u "00800340090000" n)
    ; (printf "4~%")
    (collect-stats 'u "00c00b40000000" n)
    ; (printf "5~%")
    (collect-stats 'u "00800640030000" n)
    ; (printf "6~%")
    (collect-stats 'u "00800940010040" n)
    ; (printf "7~%")
    (collect-stats 'u "00000840010060" n)
    ; (printf "8~%")
    (collect-stats 'u "00800240030080" n)
    ; (printf "9~%")
    (collect-stats 'u "00800B00010000" n)
    ; (printf "10~%")
    (collect-stats 'u "00400a40000020" n)
    ; (printf "11~%")
    (collect-stats 'u "000006c0010000" n)   ;  shifted rt "00000d80020000"
    ; (printf "12~%")
    (collect-stats 'u "00c00340080000" n)
    ; (printf "13~%")
    (collect-stats 'u "00400240080020" n)
    ; (printf "14~%")
    (collect-stats 'u "01800bc0000000" n)
    ; (printf "15~%")
    (collect-stats 'u "00c00640020000" n)))

(define normal-v
  (lambda (n)
    ; (printf "1~%")
    (collect-stats 'v "00000A00010020" n)
    ; (printf "2~%")
    (collect-stats 'v "00000900060000" n)
    ; (printf "3~%")
    (collect-stats 'v "00000240000090" n)
    ; (printf "4~%")
    (collect-stats 'v "00000280010080" n)
    ; (printf "5~%")
    (collect-stats 'v "00000880040020" n)
    ; (printf "6~%")
    (collect-stats 'v "00000200090020" n)
    ; (printf "7~%")
    (collect-stats 'v "00000800010060" n)
    ; (printf "8~%")
    (collect-stats 'v "000000800c0020" n)
    ; (printf "9~%")
    (collect-stats 'v "000000800100C0" n)
    ; (printf "10~%")
    (collect-stats 'v "02000280090000" n)
    ; (printf "11~%")
    (collect-stats 'v "01000880000060" n)
    ; (printf "12~%")
    (collect-stats 'v "000000400000D0" n)
    ; (printf "13~%")
    (collect-stats 'v "000001000e0000" n)
    ; (printf "14~%")
    (collect-stats 'v "02000600010020" n)
    ; (printf "15~%")
    (collect-stats 'v "01000C00010020" n)))

(define normal-w
  (lambda (n)
    ; (printf "1~%")
    (collect-stats 'w "00000f80030000" n)
    ; (printf "2~%")
    (collect-stats 'w "00c00fc0000000" n)
    ; (printf "3~%")
    (collect-stats 'w "00c00bc0000000" n)
    ; (printf "4~%")
    (collect-stats 'w "00000EC0000030" n)
    ; (printf "5~%")
    (collect-stats 'w "00000F40020010" n)
    ; (printf "6~%")
    (collect-stats 'w "00000b40020010" n)
    ; (printf "7~%")
    (collect-stats 'w "000008c0000070" n)
    ; (printf "8~%")
    (collect-stats 'w "000003800b0000" n)
    ; (printf "9~%")
    (collect-stats 'w "00000ac0000030" n)
    ; (printf "10~%")
    (collect-stats 'w "00000B80030000" n)
    ; (printf "11~%")
    (collect-stats 'w "00400fC0020000" n)
    ; (printf "12~%")
    (collect-stats 'w "00000e80010020" n)
    ; (printf "13~%")
    (collect-stats 'w "00000a80010020" n)
    ; (printf "14~%")
    (collect-stats 'w "00400ec0000020" n)
    ; (printf "15~%")
    (collect-stats 'w "00800f80010000" n)
    ; (printf "16~%")
    (collect-stats 'w "00400ac0000020" n)
    ; (printf "17~%")
    (collect-stats 'w "00800B80010000" n)
    ; (printf "18~%")
    (collect-stats 'w "00C009C0000040" n)
    ; (printf "19~%")
    (collect-stats 'w "00C003C0080000" n)
    ; (printf "20~%")
    (collect-stats 'w "008003000b0000" n)
    ; (printf "21~%")
    (collect-stats 'w "00800fC0000010" n)))

(define normal-x
  (lambda (n)
    ; (printf "Testing NORMALS x~%")
    ; (printf "1~%")
    (collect-stats 'x "00000000060090" n)
    ; (printf "2~%")
    (collect-stats 'x "08400480060000" n)
    ; (printf "3~%")
    (collect-stats 'x "00000840060090" n)
    ; (printf "4~%")
    (collect-stats 'x "08400780060000" n)
    ; (printf "5~%")
    (collect-stats 'x "00400800060090" n)
    ; (printf "6~%")
    (collect-stats 'x "000004400e0010" n)
    ; (printf "7~%")
    (collect-stats 'x "04000800060090" n)
    ; (printf "8~%")
    (collect-stats 'x "04800840060090" n)
    ; (printf "9~%")
    (collect-stats 'x "04800480000090" n)
    ; (printf "10~%")
    (collect-stats 'x "09000440060000" n)
    ; (printf "11~%")
    (collect-stats 'x "004004000e0010" n)
    ; (printf "12~%")
    (collect-stats 'x "000006000e0010" n)
    ; (printf "13~%")
    (collect-stats 'x "08000040060040" n)))


(define normal-y
  (lambda (n)
    ; (printf "Testing NORMALS y~%")
    ; (printf "1~%")
    (collect-stats 'y "00880b4C011000" n)
    ; (printf "2~%")
    (collect-stats 'y "00800B48011002" n)
    ; (printf "3~%")
    (collect-stats 'y "00000a48011022" n)
    ; (printf "4~%")
    (collect-stats 'y "00080A4C011020" n)
    ; (printf "5~%")
    (collect-stats 'y "00400a48001022" n)
    ; (printf "6~%")
    (collect-stats 'y "00480A4c001020" n)
    ; (printf "7~%")
    (collect-stats 'y "00080a48011020" n)
    ; (printf "8~%")
    (collect-stats 'y "00880B48011000" n)
    ; (printf "9~%")
    (collect-stats 'y "00cc0b49000000" n)
    ; (printf "10~%")
    (collect-stats 'y "00C00B48001002" n)
    ; (printf "11~%")
    (collect-stats 'y "00C80b4c001000" n)
    ; (printf "12~%")
    (collect-stats 'y "00880b48013000" n)
    ; (printf "13~%")
    (collect-stats 'y "004402C9000082" n)
    ; (printf "14~%")
    (collect-stats 'y "008806480b3000" n)
    ; (printf "15~%")
    (collect-stats 'y "004802C8003080" n)
    ; (printf "16~%")
    (collect-stats 'y "00880b08011010" n)
    ; (printf "17~%")
    (collect-stats 'y "00000A64016020" n)
    ; (printf "18~%")
    (collect-stats 'y "0208064c011020" n)
    ; (printf "19~%")
    (collect-stats 'y "00040249000092" n)
    ; (printf "20~%")
    (collect-stats 'y "00800348091002" n)
    ; (printf "21~%")
    (collect-stats 'y "00000864016020" n)))
    
(define normal-z
  (lambda (n)
    ; (printf "1~%")
    (collect-stats 'z "0cc00000060000" n)
    ; (printf "2~%")
    (collect-stats 'z "0CC00840060000" n)
    ; (printf "3~%")
    (collect-stats 'z "0cc00040060000" n)
    ; (printf "4~%")
    (collect-stats 'z "0CC00800060000" n)
    ; (printf "5~%")
    (collect-stats 'z "04c000400e0000" n)
    ; (printf "6~%")
    (collect-stats 'z "048000000f0000" n)
    ; (printf "7~%")
    (collect-stats 'z "0C800800070000" n)
    ; (printf "8~%")
    (collect-stats 'z "04c000000e0000" n)
    ; (printf "9~%")
    (collect-stats 'z "04800000070000" n)
    ; (printf "10~%")
    (collect-stats 'z "08c00000060040" n)))

;--------------------------------------------------------------------------
; problematic, but not impossible, normals

(define trickies
  (lambda (n)
    (collect-stats 'm "000007000D0000" n)
    (collect-stats 'm "00000d400000c0" n)
    (collect-stats 'm "000007400C0000" n)
    (collect-stats 'u "000006c0010000" n)
    (collect-stats 'w "00000a80010020" n)
    (collect-stats 'w "00800f80010000" n)
    (collect-stats 'w "00800B80010000" n)
    (collect-stats 'z "0cc00040060000" n)
    (date-and-time)))


;=========================================================================
; FONTS dataset

(define test-fonts
  (lambda (n file)
    (transcript-on file)
    (date-and-time)
    (run-fonts n)
    (date-and-time)
    (transcript-off)))

(define run-fonts
  (lambda (n)
    (printf "Testing bowtie~%")
    (collect-stats 'a "0A000000030060" n)
    (collect-stats 'b "0A014000830060" n)
    (collect-stats 'c "04000040090030" n)
    (collect-stats 'd "05011000090430" n)
    (collect-stats 'e "014000000C0060" n)
    (collect-stats 'f "18000480C00600" n)
    (collect-stats 'g "0140000A0C1060" n)
    (collect-stats 'h "080140C08A0060" n)
    (collect-stats 'i "800000808A0820" n)
    (collect-stats 'j "80000014882822" n)
    (collect-stats 'k "094141008C0060" n)
    (collect-stats 'l "00014880820020" n)
    (collect-stats 'm "080003C00C0080" n)
    (collect-stats 'n "000000C00A0060" n)
    (collect-stats 'o "020000000900E0" n)
    (collect-stats 'p "028000220900C2" n)
    (collect-stats 'q "014400080C1061" n)
    (collect-stats 'r "000002800A0060" n)
    (collect-stats 's "06000000030060" n)
    (collect-stats 't "09002000090030" n)
    (collect-stats 'u "00000C40050060" n)
    (collect-stats 'v "000006000900A0" n)
    (collect-stats 'w "00800E40020030" n)
    (collect-stats 'x "00800A000600D0" n)
    (collect-stats 'y "00400C0A051060" n)
    (collect-stats 'z "09000000090030" n)
    (printf "Testing close~%")
    (collect-stats 'a "04C00240060000" n)
    (collect-stats 'b "00C04B40060000" n)
    (collect-stats 'c "00C00000060000" n)
    (collect-stats 'd "00C01240060000" n)
    (collect-stats 'e "01C00200060000" n)
    (collect-stats 'f "04000480100000" n)
    (collect-stats 'g "00C00240064000" n)
    (collect-stats 'h "00404B40060000" n)
    (collect-stats 'i "00000480200000" n)
    (collect-stats 'j "00000480208000" n)
    (collect-stats 'k "00004000060090" n)
    (collect-stats 'l "00002480000000" n)
    (collect-stats 'm "000002C0060000" n)
    (collect-stats 'n "00000240060000" n)
    (collect-stats 'o "00C00240060000" n)
    (collect-stats 'p "00C00260060000" n)
    (collect-stats 'q "00C00248060000" n)
    (collect-stats 'r "00000200060000" n)
    (collect-stats 's "00000300060000" n)
    (collect-stats 't "04002480000000" n)
    (collect-stats 'u "00C00240020000" n)
    (collect-stats 'v "00000900060000" n)
    (collect-stats 'w "00000D00060000" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00C00240024000" n)
    (collect-stats 'z "04C00000060000" n)
    (printf "Testing double-BSL~%")
    (collect-stats 'a "020000C00000B0" n)
    (collect-stats 'b "004049000000B0" n)
    (collect-stats 'c "08000040000090" n)
    (collect-stats 'd "080012400000D0" n)
    (collect-stats 'e "090000000000D0" n)
    (collect-stats 'f "280040000001D0" n)
    (collect-stats 'g "080002480000D4" n)
    (collect-stats 'h "000048400000B0" n)
    (collect-stats 'i "00002040000390" n)
    (collect-stats 'j "00002008000394" n)
    (collect-stats 'k "080048400000B0" n)
    (collect-stats 'l "00004040000090" n)
    (collect-stats 'm "00000C000000F0" n)
    (collect-stats 'n "000008400000B0" n)
    (collect-stats 'o "080000400000D0" n)
    (collect-stats 'p "004009200000B0" n)
    (collect-stats 'q "004008080000B0" n)
    (collect-stats 'r "080002000000D0" n)
    (collect-stats 's "084001000000F0" n)
    (collect-stats 't "08004040000090" n)
    (collect-stats 'u "000000400000D0" n)
    (collect-stats 'v "00000240000090" n)
    (collect-stats 'w "000006C00000B0" n)
    (collect-stats 'x "000004800000F0" n)
    (collect-stats 'y "000008480000D4" n)
    (collect-stats 'z "00D00800000098" n)
    (printf "Testing flournoy ranch~%")
    (collect-stats 'a "00C00300050020" n)
    (collect-stats 'b "00C24AC0040820" n)
    (collect-stats 'c "000008000100A0" n)
    (collect-stats 'd "00C09B80410080" n)
    (collect-stats 'e "040003000A0040" n)
    (collect-stats 'f "20010480000720" n)
    (collect-stats 'g "0C000D49020041" n)
    (collect-stats 'h "00824AC0040820" n)
    (collect-stats 'i "00400480080800" n)
    (collect-stats 'j "00040492080800" n)
    (collect-stats 'k "00824A80040830" n)
    (collect-stats 'l "00824800000820" n)
    (collect-stats 'm "04800AC0040080" n)
    (collect-stats 'n "048002C0040000" n)
    (collect-stats 'o "0C000D00020000" n)
    (collect-stats 'p "0C000764082010" n)
    (collect-stats 'q "0C000D12031040" n)
    (collect-stats 'r "00800680040000" n)
    (collect-stats 's "00C00600000050" n)
    (collect-stats 't "04002440200010" n)
    (collect-stats 'u "04800D00020000" n)
    (collect-stats 'v "04000D00020000" n)
    (collect-stats 'w "04800D40020010" n)
    (collect-stats 'x "08000600020050" n)
    (collect-stats 'y "04000D49020041" n)
    (collect-stats 'z "00C00C000A0000" n)
    (printf "Testing hint4~%")
    (collect-stats 'a "0A000000010060" n)
    (collect-stats 'b "00024800010060" n)
    (collect-stats 'c "00400000080020" n)
    (collect-stats 'd "00009200090020" n)
    (collect-stats 'e "01400000080060" n)
    (collect-stats 'f "08002480400000" n)
    (collect-stats 'g "00000048081060" n)
    (collect-stats 'h "00024840080040" n)
    (collect-stats 'i "00000900800000" n)
    (collect-stats 'j "00000490402000" n)
    (collect-stats 'k "02024800040010" n)
    (collect-stats 'l "00024800000020" n)
    (collect-stats 'm "000001C0080040" n)
    (collect-stats 'n "00000140080040" n)
    (collect-stats 'o "08000000010060" n)
    (collect-stats 'p "00000124090040" n)
    (collect-stats 'q "00000049080060" n)
    (collect-stats 'r "04000100080000" n)
    (collect-stats 's "03800000090000" n)
    (collect-stats 't "08002480010000" n)
    (collect-stats 'u "00800B00010000" n)
    (collect-stats 'v "00000A00010020" n)
    (collect-stats 'w "00000E00010020" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00000848011020" n)
    (collect-stats 'z "04C00000060000" n)
    (printf "Testing sabretooth~%")
    (collect-stats 'a "01800800030080" n)
    (collect-stats 'b "09024900020040" n)
    (collect-stats 'c "06000040080010" n)
    (collect-stats 'd "06009240080010" n)
    (collect-stats 'e "060000400C0010" n)
    (collect-stats 'f "18024900000840" n)
    (collect-stats 'g "0600024C088014" n)
    (collect-stats 'h "00024D40020040" n)
    (collect-stats 'i "02000100800080" n)
    (collect-stats 'j "02000100800088" n)
    (collect-stats 'k "02424B00040020" n)
    (collect-stats 'l "00024900020000" n)
    (collect-stats 'm "000005C00000E0" n)
    (collect-stats 'n "000004C00000E0" n)
    (collect-stats 'o "00C00440020040" n)
    (collect-stats 'p "09000924020040" n)
    (collect-stats 'q "06000249080010" n)
    (collect-stats 'r "07000900000040" n)
    (collect-stats 's "0D800000010080" n)
    (collect-stats 't "04002C80090000" n)
    (collect-stats 'u "00000C80000030" n)
    (collect-stats 'v "00000880040020" n)
    (collect-stats 'w "00000E80000060" n)
    (collect-stats 'x "028002000E0010" n)
    (collect-stats 'y "0A00024C088014" n)
    (collect-stats 'z "01C00800020080" n)))

(define test-majors
  (lambda (n file)
    (transcript-on file)
    (date-and-time)
    (run-majors n)
    (date-and-time)
    (transcript-off)))
    
(define run-majors
  (lambda (n)
    (printf "Testing standard square~%")
    (collect-stats 'a "0fc00340000000" n)
    (collect-stats 'b "0cc24b40000000" n)
    (collect-stats 'c "0cc00900000000" n)
    (collect-stats 'd "0cc09b40000000" n)
    (collect-stats 'e "0fc00b00000000" n)
    (collect-stats 'f "4c012480000000" n)
    (collect-stats 'g "0ccc0b49000000" n)
    (collect-stats 'h "0c024b40000000" n)
    (collect-stats 'i "14000240000000" n)
    (collect-stats 'j "14040249000000" n)
    (collect-stats 'k "00024900060010" n)
    (collect-stats 'l "00012480000000" n)
    (collect-stats 'm "0c000fc0000000" n)
    (collect-stats 'n "0c000b40000000" n)
    (collect-stats 'o "0cc00b40000000" n)
    (collect-stats 'p "0cc00b64000000" n)
    (collect-stats 'q "0cc00b49000000" n)
    (collect-stats 'r "0c000900000000" n)
    (collect-stats 's "0fc00840000000" n)
    (collect-stats 't "0c402480000000" n)
    (collect-stats 'u "00c00b40000000" n)
    (collect-stats 'v "00000a00010020" n)
    (collect-stats 'w "00c00fc0000000" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00cc0b49000000" n)
    (collect-stats 'z "0cc00000060000" n)
    (printf "Testing house~%")
    (collect-stats 'a "01C000400A0040" n)
    (collect-stats 'b "00C04940080040" n)
    (collect-stats 'c "00C00100080040" n)
    (collect-stats 'd "00C01340080040" n)
    (collect-stats 'e "03C00100080040" n)
    (collect-stats 'f "00000900280140" n)
    (collect-stats 'g "00F00148080040" n)
    (collect-stats 'h "00004940080040" n)
    (collect-stats 'i "00000080080040" n)
    (collect-stats 'j "00200090080040" n)
    (collect-stats 'k "00404900080060" n)
    (collect-stats 'l "00804900000000" n)
    (collect-stats 'm "00000DC0080040" n)
    (collect-stats 'n "00000940080040" n)
    (collect-stats 'o "00C00140080040" n)
    (collect-stats 'p "00C00160080040" n)
    (collect-stats 'q "00C00148080040" n)
    (collect-stats 'r "00000900080040" n)
    (collect-stats 's "02C00000080050" n)
    (collect-stats 't "00402480080040" n)
    (collect-stats 'u "00C00340080000" n)
    (collect-stats 'v "00800300090000" n)
    (collect-stats 'w "00C003C0080000" n)
    (collect-stats 'x "030000400E0000" n)
    (collect-stats 'y "00F00348080000" n)
    (collect-stats 'z "01C000000A0040" n)
    (printf "Testing shorts~%")
    (collect-stats 'a "07C00340000000" n)
    (collect-stats 'b "0CC04B40000000" n)
    (collect-stats 'c "08C00900000000" n)
    (collect-stats 'd "0CC01B40000000" n)
    (collect-stats 'e "0F800B00000000" n)
    (collect-stats 'f "2C004900000000" n)
    (collect-stats 'g "0CD00B48000000" n)
    (collect-stats 'h "0C004A40000000" n)
    (collect-stats 'i "28000480000000" n)
    (collect-stats 'j "28000490000000" n)
    (collect-stats 'k "03004940080000" n)
    (collect-stats 'l "00002480000000" n)
    (collect-stats 'm "0C000E40000000" n)
    (collect-stats 'n "0C000A40000000" n)
    (collect-stats 'o "0CC00B40000000" n)
    (collect-stats 'p "0CC00B60000000" n)
    (collect-stats 'q "0CC00B48000000" n)
    (collect-stats 'r "04000480000000" n)
    (collect-stats 's "0B400840000000" n)
    (collect-stats 't "08402480000000" n)
    (collect-stats 'u "00C00340000000" n)
    (collect-stats 'v "00000200010020" n)
    (collect-stats 'w "00C003C0000000" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00D00348000000" n)
    (collect-stats 'z "04800000060000" n)
    (printf "Testing slash~%")
    (collect-stats 'a "0CC00240060000" n)
    (collect-stats 'b "00C24B40060000" n)
    (collect-stats 'c "00C00000060000" n)
    (collect-stats 'd "00C09240060000" n)
    (collect-stats 'e "0CC00900060000" n)
    (collect-stats 'f "00002480460000" n)
    (collect-stats 'g "00CC0249060000" n)
    (collect-stats 'h "00024B40060000" n)
    (collect-stats 'i "14008000460000" n)
    (collect-stats 'j "14008024460000" n)
    (collect-stats 'k "00024900060010" n)
    (collect-stats 'l "00024900060000" n)
    (collect-stats 'm "00000EC00E0000" n)
    (collect-stats 'n "000006C0060000" n)
    (collect-stats 'o "00C00240060000" n)
    (collect-stats 'p "00C00264060000" n)
    (collect-stats 'q "00C00249060000" n)
    (collect-stats 'r "00000200060000" n)
    (collect-stats 's "04000000160000" n)
    (collect-stats 't "00402480060000" n)
    (collect-stats 'u "00000D80060000" n)
    (collect-stats 'v "04000900060000" n)
    (collect-stats 'w "00000F80070000" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00000924060000" n)
    (collect-stats 'z "0CC00000060000" n)
    (printf "Testing slant~%")
    (collect-stats 'a "05C00240020000" n)
    (collect-stats 'b "04C02640420000" n)
    (collect-stats 'c "04C00400020000" n)
    (collect-stats 'd "04C09640020000" n)
    (collect-stats 'e "05C00600020000" n)
    (collect-stats 'f "04002400420000" n)
    (collect-stats 'g "04C80642024000" n)
    (collect-stats 'h "04002640420000" n)
    (collect-stats 'i "00000400420000" n)
    (collect-stats 'j "00000424420000" n)
    (collect-stats 'k "00002440460010" n)
    (collect-stats 'l "00002400420000" n)
    (collect-stats 'm "040007C0080000" n)
    (collect-stats 'n "04000640020000" n)
    (collect-stats 'o "04C00640020000" n)
    (collect-stats 'p "04C00644028000" n)
    (collect-stats 'q "04C00649020000" n)
    (collect-stats 'r "04000400020000" n)
    (collect-stats 's "05C00440000000" n)
    (collect-stats 't "04C02400020000" n)
    (collect-stats 'u "00C00640020000" n)
    (collect-stats 'v "00800600030000" n)
    (collect-stats 'w "008003000B0000" n)
    (collect-stats 'x "00400680060000" n)
    (collect-stats 'y "00C80642024000" n)
    (collect-stats 'z "05C00200020000" n)
    (printf "Testing snout~%")
    (collect-stats 'a "05C00B40000080" n)
    (collect-stats 'b "02C24B40040000" n)
    (collect-stats 'c "02C00100040000" n)
    (collect-stats 'd "01C09B40000080" n)
    (collect-stats 'e "0E800B40000010" n)
    (collect-stats 'f "1C024080000880" n)
    (collect-stats 'g "0D200B49020001" n)
    (collect-stats 'h "02024B40040000" n)
    (collect-stats 'i "0A000240140000" n)
    (collect-stats 'j "0A100248142000" n)
    (collect-stats 'k "02424B00040020" n)
    (collect-stats 'l "00C12400020000" n)
    (collect-stats 'm "010009C0000080" n)
    (collect-stats 'n "01000940000080" n)
    (collect-stats 'o "01C00940000080" n)
    (collect-stats 'p "0E000B64000010" n)
    (collect-stats 'q "0D000B49020000" n)
    (collect-stats 'r "01000900000080" n)
    (collect-stats 's "0AC00A40040000" n)
    (collect-stats 't "02400480040200" n)
    (collect-stats 'u "00C00640020000" n)
    (collect-stats 'v "008006000B0000" n)
    (collect-stats 'w "02000E40000010" n)
    (collect-stats 'x "00000200030010" n)
    (collect-stats 'y "00E00649020001" n)
    (collect-stats 'z "04C00900040080" n)
    (printf "Testing benzene right~%")
    (collect-stats 'a "058002400B0000" n)
    (collect-stats 'b "04824B00090000" n)
    (collect-stats 'c "04800100090000" n)
    (collect-stats 'd "04809300090000" n)
    (collect-stats 'e "068001000D0000" n)
    (collect-stats 'f "04002480480000" n)
    (collect-stats 'g "04880348091000" n)
    (collect-stats 'h "04024B00090000" n)
    (collect-stats 'i "00014480A80000" n)
    (collect-stats 'j "00014490A82000" n)
    (collect-stats 'k "07024900090000" n)
    (collect-stats 'l "80012480010000" n)
    (collect-stats 'm "080007000D0000" n)
    (collect-stats 'n "0C000300090000" n)
    (collect-stats 'o "04800300090000" n)
    (collect-stats 'p "04800324090000" n)
    (collect-stats 'q "04800349090000" n)
    (collect-stats 'r "04000100080000" n)
    (collect-stats 's "07800000090000" n)
    (collect-stats 't "04002480090000" n)
    (collect-stats 'u "00800340090000" n)
    (collect-stats 'v "08000680010000" n)
    (collect-stats 'w "000003800B0000" n)
    (collect-stats 'x "08400480060000" n)
    (collect-stats 'y "00880348091000" n)
    (collect-stats 'z "048000000F0000" n)
    (printf "Testing benzene left~%")
    (collect-stats 'a "0A400040000070" n)
    (collect-stats 'b "08424840000060" n)
    (collect-stats 'c "08400800000060" n)
    (collect-stats 'd "08409A40000060" n)
    (collect-stats 'e "094008000000E0" n)
    (collect-stats 'f "8C020480000600" n)
    (collect-stats 'g "08440849000062" n)
    (collect-stats 'h "08024840000060" n)
    (collect-stats 'i "00822080000A80" n)
    (collect-stats 'j "000A2092000A80" n)
    (collect-stats 'k "08424900000060" n)
    (collect-stats 'l "00024800000020" n)
    (collect-stats 'm "00000C400000E0" n)
    (collect-stats 'n "08000840000060" n)
    (collect-stats 'o "08400840000060" n)
    (collect-stats 'p "08400964000060" n)
    (collect-stats 'q "08400849000060" n)
    (collect-stats 'r "08000900000040" n)
    (collect-stats 's "084000000000F0" n)
    (collect-stats 't "04002400000210" n)
    (collect-stats 'u "00400840000060" n)
    (collect-stats 'v "08000640000010" n)
    (collect-stats 'w "000008C0000070" n)
    (collect-stats 'x "04800480000090" n)
    (collect-stats 'y "00440849000062" n)
    (collect-stats 'z "0B400000000060" n)
    (printf "Testing square curl~%")
    (collect-stats 'a "06C00340000000" n)
    (collect-stats 'b "04C04F40000000" n)
    (collect-stats 'c "08C00D00000000" n)
    (collect-stats 'd "08C01F40000000" n)
    (collect-stats 'e "0D800B00000000" n)
    (collect-stats 'f "36005900000000" n)
    (collect-stats 'g "0C900BC8000000" n)
    (collect-stats 'h "0C404BC0000000" n)
    (collect-stats 'i "28030C80000000" n)
    (collect-stats 'j "28230CB0000000" n)
    (collect-stats 'k "0C404DC0000000" n)
    (collect-stats 'l "00804980000000" n)
    (collect-stats 'm "0C400F40000000" n)
    (collect-stats 'n "0C400BC0000000" n)
    (collect-stats 'o "0CC00B40000000" n)
    (collect-stats 'p "0C400BE0000000" n)
    (collect-stats 'q "0C800BC8000000" n)
    (collect-stats 'r "0D000B00000000" n)
    (collect-stats 's "0B400840000000" n)
    (collect-stats 't "0C4024C0000000" n)
    (collect-stats 'u "04C00F40000000" n)
    (collect-stats 'v "06400AC0000000" n)
    (collect-stats 'w "04C00BC0000000" n)
    (collect-stats 'x "0B000780000000" n)
    (collect-stats 'y "04D00F48000000" n)
    (collect-stats 'z "07800300000000" n)
    (printf "Testing hunt4~%")
    (collect-stats 'a "0B000040010060" n)
    (collect-stats 'b "00024900090060" n)
    (collect-stats 'c "00400000080060" n)
    (collect-stats 'd "00009240090060" n)
    (collect-stats 'e "03400000080060" n)
    (collect-stats 'f "0C002480400000" n)
    (collect-stats 'g "00080248091060" n)
    (collect-stats 'h "00024940080040" n)
    (collect-stats 'i "08000900800000" n)
    (collect-stats 'j "04000490402000" n)
    (collect-stats 'k "02024900040010" n)
    (collect-stats 'l "00024800000020" n)
    (collect-stats 'm "00000DC0080040" n)
    (collect-stats 'n "00000940080040" n)
    (collect-stats 'o "08000000090060" n)
    (collect-stats 'p "00000924090060" n)
    (collect-stats 'q "00000249090060" n)
    (collect-stats 'r "04000900080000" n)
    (collect-stats 's "07800000090000" n)
    (collect-stats 't "0C002480010000" n)
    (collect-stats 'u "00800B40010000" n)
    (collect-stats 'v "00000A00010020" n)
    (collect-stats 'w "00000E80010020" n)
    (collect-stats 'x "00000000060090" n)
    (collect-stats 'y "00080A48011020" n)
    (collect-stats 'z "0CC00000060000" n)
    (printf "Testing boat~%")
    (collect-stats 'a "0F000200010020" n)
    (collect-stats 'b "0C004A00010020" n)
    (collect-stats 'c "0C000800010020" n)
    (collect-stats 'd "0C001A00010020" n)
    (collect-stats 'e "0E000800050020" n)
    (collect-stats 'f "38004800000020" n)
    (collect-stats 'g "0C000A40014028" n)
    (collect-stats 'h "0C004A40000020" n)
    (collect-stats 'i "28000400020000" n)
    (collect-stats 'j "14000200018000" n)
    (collect-stats 'k "04004900090020" n)
    (collect-stats 'l "00004800010020" n)
    (collect-stats 'm "0C000E40000020" n)
    (collect-stats 'n "0C000A40000020" n)
    (collect-stats 'o "0C000A00010020" n)
    (collect-stats 'p "0C000B20010020" n)
    (collect-stats 'q "0C000A48010020" n)
    (collect-stats 'r "0C000A00000020" n)
    (collect-stats 's "0D0000000100A0" n)
    (collect-stats 't "08004800010020" n)
    (collect-stats 'u "00000A40010020" n)
    (collect-stats 'v "00000A00010020" n)
    (collect-stats 'w "00000E80010020" n)
    (collect-stats 'x "060000000400B0" n)
    (collect-stats 'y "00000A40014028" n)
    (collect-stats 'z "0E000000050020" n)))

